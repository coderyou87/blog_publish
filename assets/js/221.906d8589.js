(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{377:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("[toc]")]),t._v(" "),a("h1",{attrs:{id:"本节课程目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本节课程目标"}},[t._v("#")]),t._v(" 本节课程目标")]),t._v(" "),a("ul",[a("li",[t._v("熟悉条件判断语句，如判断整数、判断字符串等")]),t._v(" "),a("li",[t._v("熟悉流程控制语句基本语法，如if…else…")])]),t._v(" "),a("h1",{attrs:{id:"一、条件判断语法结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、条件判断语法结构"}},[t._v("#")]),t._v(" 一、条件判断语法结构")]),t._v(" "),a("p",[a("strong",[t._v("思考：何为真(==true==)？何为假(==false==)？")])]),t._v(" "),a("p",[t._v("##1. ==条件判断语法格式==")]),t._v(" "),a("ul",[a("li",[t._v("格式1： =="),a("strong",[t._v("test")]),t._v("== 条件表达式")]),t._v(" "),a("li",[t._v("格式2： "),a("strong",[t._v("[")]),t._v(" 条件表达式 ]")]),t._v(" "),a("li",[t._v("格式3： "),a("strong",[t._v("[[")]),t._v(" 条件表达式 ]]  支持正则 =~")])]),t._v(" "),a("p",[a("strong",[t._v("特别说明：")])]),t._v(" "),a("p",[t._v("1）==[==  亲亲，我两边都有空格，不空打死你呦  ==]== 👿")]),t._v(" "),a("p",[t._v("2）==[[==  亲亲，我两边都有空格，不空打死你呦  ==]]==👿")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("更多判断，"),a("code",[t._v("man test")]),t._v("去查看，很多的参数都用来进行条件判断")])]),t._v(" "),a("h2",{attrs:{id:"_2-条件判断相关参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-条件判断相关参数"}},[t._v("#")]),t._v(" 2. 条件判断相关参数")]),t._v(" "),a("p",[t._v("问：你要判断什么？")]),t._v(" "),a("p",[t._v("答：我要判断文件类型，判断文件新旧，判断字符串是否相等，判断权限等等...")]),t._v(" "),a("h3",{attrs:{id:"㈠-判断文件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-判断文件类型"}},[t._v("#")]),t._v(" ㈠ ==判断文件类型==")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("判断参数")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("==-e==")]),t._v(" "),a("td",[t._v("判断文件是否存在（任何类型文件）")])]),t._v(" "),a("tr",[a("td",[t._v("-f")]),t._v(" "),a("td",[t._v("判断文件是否存在==并且==是一个普通文件")])]),t._v(" "),a("tr",[a("td",[t._v("-d")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个目录")])]),t._v(" "),a("tr",[a("td",[t._v("-L")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个软连接文件")])]),t._v(" "),a("tr",[a("td",[t._v("-b")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个块设备文件")])]),t._v(" "),a("tr",[a("td",[t._v("-S")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个套接字文件")])]),t._v(" "),a("tr",[a("td",[t._v("-c")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个字符设备文件")])]),t._v(" "),a("tr",[a("td",[t._v("-p")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个命名管道文件")])]),t._v(" "),a("tr",[a("td",[t._v("==-s==")]),t._v(" "),a("td",[t._v("判断文件是否存在并且是一个非空文件（有内容）")])])])]),t._v(" "),a("p",[a("strong",[t._v("举例说明：")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e file\t\t\t\t\t只要文件存在条件为真\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("shell01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dir1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t \t判断目录是否存在，存在条件为真\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("shell01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dir1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t判断目录是否存在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不存在条件为真\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("shell01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t判断文件是否存在，并且是一个普通的文件\n")])])]),a("h3",{attrs:{id:"㈡-判断文件权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-判断文件权限"}},[t._v("#")]),t._v(" ㈡ 判断文件权限")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("判断参数")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-r")]),t._v(" "),a("td",[t._v("当前用户对其是否可读")])]),t._v(" "),a("tr",[a("td",[t._v("-w")]),t._v(" "),a("td",[t._v("当前用户对其是否可写")])]),t._v(" "),a("tr",[a("td",[t._v("-x")]),t._v(" "),a("td",[t._v("当前用户对其是否可执行")])]),t._v(" "),a("tr",[a("td",[t._v("-u")]),t._v(" "),a("td",[t._v("是否有suid，高级权限冒险位")])]),t._v(" "),a("tr",[a("td",[t._v("-g")]),t._v(" "),a("td",[t._v("是否sgid，高级权限强制位")])]),t._v(" "),a("tr",[a("td",[t._v("-k")]),t._v(" "),a("td",[t._v("是否有t位，高级权限粘滞位")])])])]),t._v(" "),a("h3",{attrs:{id:"㈢-判断文件新旧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-判断文件新旧"}},[t._v("#")]),t._v(" ㈢ 判断文件新旧")]),t._v(" "),a("p",[t._v("说明：这里的新旧指的是==文件的修改时间==。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("判断参数")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("file1 -nt  file2")]),t._v(" "),a("td",[t._v("比较file1是否比file2新")])]),t._v(" "),a("tr",[a("td",[t._v("file1 -ot  file2")]),t._v(" "),a("td",[t._v("比较file1是否比file2旧")])]),t._v(" "),a("tr",[a("td",[t._v("file1 -ef  file2")]),t._v(" "),a("td",[t._v("比较是否为同一个文件，或者用于判断硬连接，是否指向同一个inode")])])])]),t._v(" "),a("h3",{attrs:{id:"㈣-判断整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-判断整数"}},[t._v("#")]),t._v(" ㈣ 判断整数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("判断参数")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-eq")]),t._v(" "),a("td",[t._v("相等")])]),t._v(" "),a("tr",[a("td",[t._v("-ne")]),t._v(" "),a("td",[t._v("不等")])]),t._v(" "),a("tr",[a("td",[t._v("-gt")]),t._v(" "),a("td",[t._v("大于")])]),t._v(" "),a("tr",[a("td",[t._v("-lt")]),t._v(" "),a("td",[t._v("小于")])]),t._v(" "),a("tr",[a("td",[t._v("-ge")]),t._v(" "),a("td",[t._v("大于等于")])]),t._v(" "),a("tr",[a("td",[t._v("-le")]),t._v(" "),a("td",[t._v("小于等于")])])])]),t._v(" "),a("h3",{attrs:{id:"㈤-判断字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈤-判断字符串"}},[t._v("#")]),t._v(" ㈤ ==判断字符串==")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("判断参数")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-z")]),t._v(" "),a("td",[t._v("判断是否为==空==字符串，字符串长度为0则成立")])]),t._v(" "),a("tr",[a("td",[t._v("-n")]),t._v(" "),a("td",[t._v("判断是否为==非空==字符串，字符串长度不为0则成立")])]),t._v(" "),a("tr",[a("td",[t._v("string1 = string2")]),t._v(" "),a("td",[t._v("判断字符串是否相等")])]),t._v(" "),a("tr",[a("td",[t._v("string1 != string2")]),t._v(" "),a("td",[t._v("判断字符串是否相不等")])])])]),t._v(" "),a("h3",{attrs:{id:"㈥-多重条件判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈥-多重条件判断"}},[t._v("#")]),t._v(" ㈥ ==多重条件判断==")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("判断符号")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-a 和 &&")]),t._v(" "),a("td",[t._v("逻辑与")]),t._v(" "),a("td",[t._v("[ 1 -eq 1 -a 1 -ne 0 ]     [ 1 -eq 1 ] && [ 1 -ne 0 ]")])]),t._v(" "),a("tr",[a("td",[t._v("-o 和 ||")]),t._v(" "),a("td",[t._v("逻辑或")]),t._v(" "),a("td",[t._v("[ 1 -eq 1 -o 1 -ne 1 ]")])])])]),t._v(" "),a("p",[a("strong",[t._v("==特别说明：==")])]),t._v(" "),a("p",[t._v("&&\t前面的表达式==为真==，才会执行后面的代码")]),t._v(" "),a("p",[t._v("||\t 前面的表达式==为假==，才会执行后面的代码")]),t._v(" "),a("p",[t._v(";\t     ==只==用于==分割==命令或表达式")]),t._v(" "),a("h4",{attrs:{id:"①-举例说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#①-举例说明"}},[t._v("#")]),t._v(" ① 举例说明")]),t._v(" "),a("ul",[a("li",[t._v("数值比较")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ $(id -u) -eq 0 ] && echo "the user is admin"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ne")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the user is not admin"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the user is admin"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the user is not admin"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uid=`id -u`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test $uid -eq 0 && echo this is admin")]),t._v("\nthis is admin\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [ $(id -u) -ne 0 ]  || echo this is admin")]),t._v("\nthis is admin\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [ $(id -u) -eq 0 ]  && echo this is admin || echo this is not admin")]),t._v("\nthis is admin\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# su - stu1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[stu1@server ~]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" this is admin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" this is not admin\nthis is not admin\n")])])]),a("ul",[a("li",[t._v("类C风格的数值比较")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("注意：在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中，=表示赋值；==表示判断\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((1==2));echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((1<2));echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((2>=1));echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((2!=1));echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((`id -u`==0));echo $?")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((a=123));echo $a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unset a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ((a==123));echo $?")]),t._v("\n")])])]),a("ul",[a("li",[t._v("字符串比较")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("注意：双引号引起来，看作一个整体；= 和 == 在 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 字符串 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 比较中都表示判断\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a='hello world';b=world")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [ $a = $b ];echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ "$a" = "$b" ];echo $?')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ "$a" != "$b" ];echo $?')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ "$a" !== "$b" ];echo $?        错误')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ "$a" == "$b" ];echo $?')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# test "$a" != "$b";echo $?')]),t._v("\n\n\ntest  表达式\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 表达式 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 表达式 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n思考："),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 和 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 有什么区别？\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test -z $a;echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a=hello")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test -z $a;echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test -n $a;echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# test -n "$a";echo $?')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [ '' = $a ];echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bash: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(": : unary operator expected\n2\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [[ '' = $a ]];echo $?")]),t._v("\n0\n\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [ 1 -eq 0 -a 1 -ne 0 ];echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [ 1 -eq 0 && 1 -ne 0 ];echo $?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@server ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [[ 1 -eq 0 && 1 -ne 0 ]];echo $?")]),t._v("\n")])])]),a("h4",{attrs:{id:"②-逻辑运算符总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#②-逻辑运算符总结"}},[t._v("#")]),t._v(" ② 逻辑运算符总结")]),t._v(" "),a("ol",[a("li",[t._v("符号;和&&和||都可以用来分割命令或者表达式")]),t._v(" "),a("li",[t._v("分号（;）完全不考虑前面的语句是否正确执行，都会执行;号后面的内容")]),t._v(" "),a("li",[a("code",[t._v("&&")]),t._v("符号，需要考虑&&前面的语句的正确性，前面语句正确执行才会执行&&后的内容；反之亦然")]),t._v(" "),a("li",[a("code",[t._v("||")]),t._v("符号，需要考虑||前面的语句的非正确性，前面语句执行错误才会执行||后内容；反之亦然")]),t._v(" "),a("li",[t._v("如果&&和||一起出现，从左往右依次看，按照以上原则")])]),t._v(" "),a("h1",{attrs:{id:"二、流程控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、流程控制语句"}},[t._v("#")]),t._v(" 二、流程控制语句")]),t._v(" "),a("p",[a("strong",[t._v("关键词：==选择==（人生漫漫长路，我该何去何从🚦）")])]),t._v(" "),a("h2",{attrs:{id:"_1-基本语法结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本语法结构"}},[t._v("#")]),t._v(" 1. 基本语法结构")]),t._v(" "),a("h3",{attrs:{id:"㈠-if结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-if结构"}},[t._v("#")]),t._v(" ㈠ ==if结构==")]),t._v(" "),a("p",[a("strong",[t._v("箴言1：只要正确，就要一直向前冲✌️")])]),t._v(" "),a("p",[a("strong",[t._v("==F==")]),t._v(":表示false，为假")]),t._v(" "),a("p",[a("strong",[t._v("==T==")]),t._v(":表示true，为真")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\tcommand\n\t\tcommand\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" test 条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t命令\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 条件 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t命令\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 条件 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && command\n")])])]),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/f5270bde6b7941698d2228cdab95941d.png",alt:"流程判断1"}})]),t._v(" "),a("h3",{attrs:{id:"㈡-if-else结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-if-else结构"}},[t._v("#")]),t._v(" ㈡ ==if...else结构==")]),t._v(" "),a("p",[a("strong",[t._v("箴言2：分叉路口，二选一")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\tcommand1\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\tcommand2\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 条件 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && command1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" command2\n")])])]),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/42dc433812fe45cd8608960f2ada0eb6.png",alt:"流程判断2"}})]),t._v(" "),a("p",[a("strong",[t._v("小试牛刀：")])]),t._v(" "),a("p",[t._v("==让用户自己输入==字符串，==如果==用户输入的是hello，请打印world，==否则==打印“请输入hello”")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("read定义变量")])]),t._v(" "),a("li",[t._v("if....else...")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入一个字符串:'")]),t._v(" str\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v('"')]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入hello!'")]),t._v("\nfi\n\n  1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n  2\n  3 read "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入一个字符串:"')]),t._v(" str\n  4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v('"')]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  5 then\n  6     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" world\n  7 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  8     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入hello!"')]),t._v("\n  9 fi\n  \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该脚本需要传递参数"')]),t._v("\n  1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" = hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n  2         "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  4         "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入hello"')]),t._v("\n  5 fi\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n\nA=hello\nB=world\nC=hello\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$A")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$B")]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$C")]),t._v('"')]),t._v("\nfi\n\n\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入一个字符串:'")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v('"')]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入hello!'")]),t._v("\n")])])]),a("h3",{attrs:{id:"㈢-if-elif-else结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-if-elif-else结构"}},[t._v("#")]),t._v(" ㈢ ==if...elif...else结构==")]),t._v(" "),a("p",[a("strong",[t._v("箴言3：选择很多，能走的只有一条")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\tcommand1  \t结束\n\telif "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\tcommand2   \t结束\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\tcommand3\nfi\n注释：\n如果条件1满足，执行命令1后结束；如果条件1不满足，再看条件2，如果条件2满足执行命令2后结束；如果条件1和条件2都不满足执行命令3结束"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/b1f570a235394f5e8f1351a36c85f07e.png",alt:"流程判断3"}})]),t._v(" "),a("h3",{attrs:{id:"㈣-层层嵌套结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-层层嵌套结构"}},[t._v("#")]),t._v(" ㈣ 层层嵌套结构")]),t._v(" "),a("p",[a("strong",[t._v("箴言4：多次判断，带你走出人生迷雾。")])]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\tcommand1\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\t\tcommand2\n\t\tfi\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\t\tcommand3\n\t\telif "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" condition4 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t\t\tcommand4\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t\tcommand5\n\t\tfi\nfi\n注释：\n如果条件1满足，执行命令1；如果条件2也满足执行命令2，如果不满足就只执行命令1结束；\n如果条件1不满足，不看条件2；直接看条件3，如果条件3满足执行命令3；如果不满足则看条件4，如果条件4满足执行命令4；否则执行命令5\n")])])]),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/f07972b2adf74235860cbdc10115403c.png",alt:"流程判断4"}})]),t._v(" "),a("h2",{attrs:{id:"_2-应用案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用案例"}},[t._v("#")]),t._v(" 2. 应用案例")]),t._v(" "),a("h3",{attrs:{id:"㈠-判断两台主机是否ping通"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-判断两台主机是否ping通"}},[t._v("#")]),t._v(" ㈠ 判断两台主机是否ping通")]),t._v(" "),a("p",[t._v("**需求：**判断==当前主机==是否和==远程主机==是否ping通")]),t._v(" "),a("h4",{attrs:{id:"①-思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#①-思路"}},[t._v("#")]),t._v(" ① 思路")]),t._v(" "),a("ol",[a("li",[t._v("使用哪个命令实现  "),a("code",[t._v("ping -c次数")])]),t._v(" "),a("li",[t._v("根据命令的==执行结果状态==来判断是否通"),a("code",[t._v("$?")])]),t._v(" "),a("li",[t._v("根据逻辑和语法结构来编写脚本(条件判断或者流程控制)")])]),t._v(" "),a("h4",{attrs:{id:"②-落地实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#②-落地实现"}},[t._v("#")]),t._v(" ② 落地实现")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该脚本用于判断当前主机是否和远程指定主机互通")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 交互式定义变量，让用户自己决定ping哪个主机")]),t._v("\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入你要ping的主机的IP:"')]),t._v(" ip\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用ping程序判断主机是否互通")]),t._v("\nping "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c1 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ip")]),t._v(" &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前主机和远程主机'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ip")]),t._v('是互通的"')]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n \t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前主机和远程主机'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ip")]),t._v('不通的"')]),t._v("\nfi\n\n逻辑运算符\ntest $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 &&  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前主机和远程主机'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ip")]),t._v('是互通的"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前主机和远程主机'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ip")]),t._v('不通的"')]),t._v("\n\n")])])]),a("h3",{attrs:{id:"㈡-判断一个进程是否存在"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-判断一个进程是否存在"}},[t._v("#")]),t._v(" ㈡ 判断一个进程是否存在")]),t._v(" "),a("p",[t._v("**需求：**判断web服务器中httpd进程是否存在")]),t._v(" "),a("h4",{attrs:{id:"①-思路-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#①-思路-2"}},[t._v("#")]),t._v(" ① 思路")]),t._v(" "),a("ol",[a("li",[t._v("查看进程的相关命令   ps   pgrep")]),t._v(" "),a("li",[t._v("根据命令的返回状态值来判断进程是否存在")]),t._v(" "),a("li",[t._v("根据逻辑用脚本语言实现")])]),t._v(" "),a("h4",{attrs:{id:"②-落地实现-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#②-落地实现-2"}},[t._v("#")]),t._v(" ② 落地实现")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断一个程序(httpd)的进程是否存在")]),t._v("\npgrep httpd &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ne")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前httpd进程不存在"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前httpd进程存在"')]),t._v("\nfi\n\n或者\ntest $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前httpd进程存在"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前httpd进程不存在"')]),t._v("\n")])])]),a("h4",{attrs:{id:"③-补充命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#③-补充命令"}},[t._v("#")]),t._v(" ③ 补充命令")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("pgrep命令：以名称为依据从运行进程队列中查找进程，并显示查找到的进程id\n选项\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o：仅显示找到的最小（起始）进程号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n：仅显示找到的最大（结束）进程号；\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("l：显示进程名称；\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P：指定父进程号；pgrep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 4764  查看父进程下的子进程id\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g：指定进程组；\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t：指定开启进程的终端；\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u：指定进程的有效用户ID。\n")])])]),a("h3",{attrs:{id:"㈢-判断一个服务是否正常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-判断一个服务是否正常"}},[t._v("#")]),t._v(" ㈢ 判断一个服务是否正常")]),t._v(" "),a("p",[t._v("**需求：**判断门户网站是否能够正常访问")]),t._v(" "),a("h4",{attrs:{id:"①-思路-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#①-思路-3"}},[t._v("#")]),t._v(" ① 思路")]),t._v(" "),a("ol",[a("li",[t._v("可以判断进程是否存在，用/etc/init.d/httpd status判断状态等方法")]),t._v(" "),a("li",[t._v("最好的方法是==直接去访问==一下，通过访问成功和失败的返回值来判断\n"),a("ul",[a("li",[t._v("Linux环境，==wget==  curl  elinks -dump")])])])]),t._v(" "),a("h4",{attrs:{id:"②-落地实现-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#②-落地实现-3"}},[t._v("#")]),t._v(" ② 落地实现")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断门户网站是否能够正常提供服务")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义变量")]),t._v("\nweb_server=www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itcast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问网站")]),t._v("\nwget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$web_server")]),t._v(" &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前网站服务是ok"')]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前网站服务不ok，请立刻处理"')]),t._v("\n\n")])])]),a("p",[t._v("##3. 课堂练习")]),t._v(" "),a("h3",{attrs:{id:"㈠-判断用户是否存在"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-判断用户是否存在"}},[t._v("#")]),t._v(" ㈠ 判断用户是否存在")]),t._v(" "),a("p",[t._v("**需求1：**输入一个用户，用脚本判断该用户是否存在")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n  2 read "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入一个用户名："')]),t._v(" user_name\n  3 id "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user_name")]),t._v(" &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n  4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n  6     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该用户存在！"')]),t._v("\n  7 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  8     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户不存在！"')]),t._v("\n  9 fi\n  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断 用户（id） 是否存在")]),t._v("\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入壹个用户："')]),t._v(" id\nid "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v(" &> "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该用户存在"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该用户不存在"')]),t._v("\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入你要查询的用户名:"')]),t._v(" username\ngrep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("w "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$username")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("passwd &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nthen\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该用户已存在"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该用户不存在"')]),t._v("\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入你要检查的用户名："')]),t._v(" name\nid "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nthen\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" 用户"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v("已经存在\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" 用户"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v("不存在\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判断用户是否存在")]),t._v("\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请写出用户名"')]),t._v(" id\nid "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("then\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户存在"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户不存在"')]),t._v("\nfi\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env bash")]),t._v("\nread "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入用户名:'")]),t._v(" username\nid "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$username")]),t._v(" &>"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("null\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户存在'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不存在'")]),t._v("\n\n\n\n")])])]),a("h3",{attrs:{id:"㈡-判断软件包是否安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-判断软件包是否安装"}},[t._v("#")]),t._v(" ㈡ 判断软件包是否安装")]),t._v(" "),a("p",[t._v("**需求2：**用脚本判断一个软件包是否安装，如果没安装则安装它（假设本地yum已配合）")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("\n")])])]),a("h3",{attrs:{id:"㈢-判断当前主机的内核版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-判断当前主机的内核版本"}},[t._v("#")]),t._v(" ㈢ 判断当前主机的内核版本")]),t._v(" "),a("p",[t._v("**需求3：**判断当前内核主版本是否为2，且次版本是否大于等于6；如果都满足则输出当前内核版本")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("思路：\n1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 先查看内核的版本号\tuname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 先将内核的版本号保存到一个变量里，然后再根据需求截取出该变量的一部分：主版本和次版本\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 根据需求进步判断\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nkernel=`uname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r`\nvar1=`"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$kernel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("cut "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f1`\nvar2=`"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$kernel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("cut "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f2`\ntest "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ge")]),t._v(" 6 && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$kernel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前内核版本不符合要求"')]),t._v("\n或者\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ge")]),t._v(" 6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$kernel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前内核版本不符合要求"')]),t._v("\n或者\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 2 && "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ge")]),t._v(" 6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$kernel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前内核版本不符合要求"')]),t._v("\n\n或者\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nkernel=`uname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r`\ntest $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("kernel:0:1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-eq")]),t._v(" 2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("kernel:2:1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ge")]),t._v(" 6 && "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$kernel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不符合要求'")]),t._v("\n\n其他命令参考：\nuname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("grep ^2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("6"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不符合要求'")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);