(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{362:function(a,t,s){"use strict";s.r(t);var n=s(42),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[a._v("#")]),a._v(" 方法区")]),a._v(" "),s("h2",{attrs:{id:"一、栈、堆、方法区的交互关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、栈、堆、方法区的交互关系"}},[a._v("#")]),a._v(" 一、栈、堆、方法区的交互关系")]),a._v(" "),s("p",[s("strong",[a._v("从内存结构看")])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"c6599b01481e783393491f5349f02c4e",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/b8ffb8e0459443fd8239482d6c7b8435.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/b8ffb8e0459443fd8239482d6c7b8435.png",alt:"c6599b01481e783393491f5349f02c4e"}})])]),a._v(" "),s("p",[s("strong",[a._v("从线程共享与否的角度看")])]),a._v(" "),s("p",[a._v("ThreadLocal：如何保证多个线程在并发环境下的安全性？典型应用就是数据库连接管理，以及独立会话管理")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"3e6916e8a44cb1968e9953e588d56a63",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/8006ca3516bc42e28608d0e08c0b9993.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/8006ca3516bc42e28608d0e08c0b9993.png",alt:"3e6916e8a44cb1968e9953e588d56a63"}})])]),a._v(" "),s("blockquote",[s("p",[a._v("栈、堆、方法区的交互关系")]),a._v(" "),s("ul",[s("li",[a._v("Person 类的 .class 信息存放在方法区中")]),a._v(" "),s("li",[a._v("person 变量存放在 Java 栈的局部变量表中")]),a._v(" "),s("li",[a._v("真正的 person 对象存放在 Java 堆中")])])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"48d89309343980f5d7aa56649f946775",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/3dffb092d4894bf8869082e9f7a6d008.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/3dffb092d4894bf8869082e9f7a6d008.png",alt:"48d89309343980f5d7aa56649f946775"}})])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("在 person 对象中，有个指针指向方法区中的 person 类型数据，表明这个 person 对象是用方法区中的 Person 类 new 出来的")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"86c5a7ffeeed61e3c084db3b6e8982eb",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/1bcd5073e26346d683e44a008b2fb3b9.jpg"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/1bcd5073e26346d683e44a008b2fb3b9.jpg",alt:"86c5a7ffeeed61e3c084db3b6e8982eb"}})])])])]),a._v(" "),s("h2",{attrs:{id:"二、方法区的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、方法区的理解"}},[a._v("#")]),a._v(" 二、方法区的理解")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.5.4",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"7225ce488ff2ca1ee372cb8c753d7a5f",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/196de2bf53264c87817af205d9405f16.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/196de2bf53264c87817af205d9405f16.png",alt:"7225ce488ff2ca1ee372cb8c753d7a5f"}})])]),a._v(" "),s("h3",{attrs:{id:"_2-1-方法区的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-方法区的位置"}},[a._v("#")]),a._v(" 2.1 方法区的位置")]),a._v(" "),s("ul",[s("li",[a._v("《Java虚拟机规范》中明确说明：尽管所有的方法区在逻辑上是属于堆的一部分，但一些简单的实现可能不会选择去进行垃圾收集或者进行压缩。")]),a._v(" "),s("li",[a._v("但对于HotSpotJVM而言，"),s("strong",[a._v("方法区还有一个别名叫做Non-Heap")]),a._v("（非堆），目的就是要和堆分开。")]),a._v(" "),s("li",[a._v("所以，"),s("strong",[a._v("方法区可以看作是一块独立于Java堆的内存空间")]),a._v("。")])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"850fd1a7f2e589690cb79f49795c5fe5",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/60467a2d89f84fd884f6254e8a6b2b40.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/60467a2d89f84fd884f6254e8a6b2b40.png",alt:"850fd1a7f2e589690cb79f49795c5fe5"}})])]),a._v(" "),s("h3",{attrs:{id:"_2-2-方法区的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-方法区的理解"}},[a._v("#")]),a._v(" 2.2 方法区的理解")]),a._v(" "),s("p",[s("strong",[a._v("方法区主要存放的是 Class，而堆中主要存放的是实例化的对象")])]),a._v(" "),s("ul",[s("li",[a._v("方法区（Method Area）与Java堆一样，是"),s("strong",[a._v("各个线程共享的内存区域")])]),a._v(" "),s("li",[a._v("多个线程同时加载统一个类时，只能有一个线程能加载该类，其他线程只能等待该线程加载完毕，然后直接使用该类，即"),s("strong",[a._v("类只能加载一次")]),a._v("。")]),a._v(" "),s("li",[a._v("方法区在JVM启动的时候被创建，并且它的实际物理内存空间和Java堆区一样都可以是不连续的。")]),a._v(" "),s("li",[a._v("方法区的大小，跟堆空间一样，可以选择"),s("strong",[a._v("固定大小或者可扩展")]),a._v("。")]),a._v(" "),s("li",[a._v("方法区是接口，元空间或者永久代是方法区的实现")]),a._v(" "),s("li",[a._v("方法区的大小决定了系统可以保存多少个类，如果系统定义了太多的类，导致方法区溢出，虚拟机同样会抛出内存溢出错误：\n"),s("ul",[s("li",[a._v("java.lang.OutofMemoryError:PermGen space（JDK7之前）")]),a._v(" "),s("li",[a._v("java.lang.OutOfMemoryError:Metaspace（JDK8之后）")])])]),a._v(" "),s("li",[a._v("举例说明方法区 OOM\n"),s("ul",[s("li",[a._v("加载大量的第三方的jar包")]),a._v(" "),s("li",[a._v("Tomcat部署的工程过多（30~50个）")]),a._v(" "),s("li",[a._v("大量动态的生成反射类")])])]),a._v(" "),s("li",[a._v("关闭JVM就会释放这个区域的内存")])]),a._v(" "),s("p",[a._v("代码示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * -Xms600m -Xmx600m\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("EdenSurvivorTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"我只是来打个酱油~"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InterruptedException")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("类加载信息")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"c3a70611281dcda59e1dad07af5f26c1",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/512dacae8a1b4aad864589bf23468b12.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/512dacae8a1b4aad864589bf23468b12.png",alt:"c3a70611281dcda59e1dad07af5f26c1"}})])]),a._v(" "),s("p",[a._v("可以看到设置堆内存为600M后，年轻代+老年代=600M，所以说方法区是不存在堆中的")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"9ec075ff7a200b612c310a2d0340821d",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/997f905b5e5d43b380791b606f440455.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/997f905b5e5d43b380791b606f440455.png",alt:"9ec075ff7a200b612c310a2d0340821d"}})])]),a._v(" "),s("h3",{attrs:{id:"_2-3-hosspot中方法区的演进过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-hosspot中方法区的演进过程"}},[a._v("#")]),a._v(" 2.3 Hosspot中方法区的演进过程")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("在 JDK7 及以前，习惯上把方法区，称为永久代。JDK8开始，使用元空间取代了永久代")]),a._v("。JDK 1.8之后，元空间存放在"),s("strong",[a._v("堆外内存中")])]),a._v(" "),s("li",[a._v("我们可以将方法区类比为Java中的接口，将永久代或元空间类比为Java中具体的实现类")]),a._v(" "),s("li",[a._v("本质上，方法区和永久代并不等价。仅是对Hotspot而言的可以看作等价。《Java虚拟机规范》对如何实现方法区，不做统一要求。例如：BEAJRockit / IBM J9 中不存在永久代的概念。")]),a._v(" "),s("li",[a._v("现在来看，当年使用永久代，不是好的idea。导致Java程序更容易OOm（超过-XX:MaxPermsize上限）")]),a._v(" "),s("li",[a._v("而到了JDK8，终于完全废弃了永久代的概念，改用与JRockit、J9一样在本地内存中实现的元空间（Metaspace）来代替")]),a._v(" "),s("li",[a._v("元空间的本质和永久代类似，都是对JVM规范中方法区的实现。不过元空间与永久代最大的区别在于："),s("strong",[a._v("元空间不在虚拟机设置的内存中，而是使用本地内存")])]),a._v(" "),s("li",[a._v("永久代、元空间二者并不只是名字变了，"),s("strong",[a._v("内部结构也调整了")])]),a._v(" "),s("li",[a._v("根据《Java虚拟机规范》的规定，如果方法区无法满足新的内存分配需求时，将抛出OOM异常")])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"720a4ddc58d90fc3af835c16848e65af",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/4a663776d7fc455182d8321d4794244e.jpg"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/4a663776d7fc455182d8321d4794244e.jpg",alt:"720a4ddc58d90fc3af835c16848e65af"}})])]),a._v(" "),s("h2",{attrs:{id:"三、设置方法区大小与oom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、设置方法区大小与oom"}},[a._v("#")]),a._v(" 三、设置方法区大小与OOM")]),a._v(" "),s("p",[a._v("方法区的大小不必是固定的，JVM可以根据应用的需要动态调整")]),a._v(" "),s("h3",{attrs:{id:"_3-1-jdk7-永久代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-jdk7-永久代"}},[a._v("#")]),a._v(" 3.1 JDK7 永久代")]),a._v(" "),s("ul",[s("li",[a._v("通过-XX:Permsize来设置永久代初始分配空间。默认值是20.75M")]),a._v(" "),s("li",[a._v("-XX:MaxPermsize来设定永久代最大可分配空间。32位机器默认是64M，64位机器模式是82M")]),a._v(" "),s("li",[a._v("当JVM加载的类信息容量超过了这个值，会报异常OutofMemoryError:PermGen space。")])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"723416c248530b32ef44142adbe5274a",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/1f7992620fd245798ee15ca0d1e47c85.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/1f7992620fd245798ee15ca0d1e47c85.png",alt:"723416c248530b32ef44142adbe5274a"}})])]),a._v(" "),s("h3",{attrs:{id:"_3-2-jdk8-元空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-jdk8-元空间"}},[a._v("#")]),a._v(" 3.2 JDK8 元空间")]),a._v(" "),s("ul",[s("li",[a._v("元数据区大小可以使用参数 "),s("strong",[a._v("-XX:MetaspaceSize")]),a._v(" 和 "),s("strong",[a._v("-XX:MaxMetaspaceSize")]),a._v(" 指定")]),a._v(" "),s("li",[a._v("默认值依赖于平台，Windows下，-XX:MetaspaceSize 约为21M，"),s("strong",[a._v("-XX:MaxMetaspaceSize的值是-1，即没有限制")]),a._v("。")]),a._v(" "),s("li",[a._v("与永久代不同，如果不指定大小，默认情况下，虚拟机会耗尽所有的可用系统内存。如果元数据区发生溢出，虚拟机一样会抛出异常OutOfMemoryError:Metaspace")]),a._v(" "),s("li",[a._v("-XX:MetaspaceSize：设置初始的元空间大小。对于一个 64位 的服务器端 JVM 来说，其默认的 -XX:MetaspaceSize值为21MB。这就是初始的高水位线，一旦触及这个水位线，Full GC将会被触发并卸载没用的类（即这些类对应的类加载器不再存活），然后这个高水位线将会重置。新的高水位线的值取决于GC后释放了多少元空间。\n"),s("ul",[s("li",[a._v("如果释放的空间不足，那么在不超过MaxMetaspaceSize时，适当提高该值。")]),a._v(" "),s("li",[a._v("如果释放空间过多，则适当降低该值。")])])]),a._v(" "),s("li",[a._v("如果初始化的高水位线设置过低，上述高水位线调整情况会发生很多次。通过垃圾回收器的日志可以观察到Full GC多次调用。"),s("strong",[a._v("为了避免频繁地GC，建议将-XX:MetaspaceSize设置为一个相对较高的值")]),a._v("。")])]),a._v(" "),s("p",[a._v("配置元空间大小示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 测试设置方法区大小参数的默认值\n *\n * jdk7及以前：\n * -XX:PermSize=100m -XX:MaxPermSize=100m\n *\n * jdk8及以后：\n * -XX:MetaspaceSize=100m  -XX:MaxMetaspaceSize=100m\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodAreaDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"start..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InterruptedException")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"end..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("JVM参数")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-XX:MetaspaceSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("100m  -XX:MaxMetaspaceSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("100m\n")])])]),s("p",[a._v("终端命令查看设置的元空间大小")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("jps\njinfo -flag MetaspaceSize "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("47064")]),a._v("\njinfo -flag MaxMetaspaceSize "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("47064")]),a._v("\n")])])]),s("p",[s("a",{attrs:{"data-fancybox":"",title:"eb08bd33405eba13f2cf7e5ffcc2bd27",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/7fca46182ea44db383ad514833ed57ff.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/7fca46182ea44db383ad514833ed57ff.png",alt:"eb08bd33405eba13f2cf7e5ffcc2bd27"}})])]),a._v(" "),s("h3",{attrs:{id:"_3-3-方法区oom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-方法区oom"}},[a._v("#")]),a._v(" 3.3 方法区OOM")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("OOMTest 类继承 ClassLoader 类，获得 defineClass() 方法，可自己进行类的加载")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * jdk6/7中：\n * -XX:PermSize=10m -XX:MaxPermSize=10m\n *\n * jdk8中：\n * -XX:MetaspaceSize=10m -XX:MaxMetaspaceSize=10m\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OOMTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OOMTest")]),a._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OOMTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//创建ClassWriter对象，用于生成类的二进制字节码")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassWriter")]),a._v(" classWriter "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//指明版本号，修饰符，类名，包名，父类，接口")]),a._v("\n                classWriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("visit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Opcodes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("V1_8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Opcodes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ACC_PUBLIC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Class"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"java/lang/Object"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//返回byte[]")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" code "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" classWriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toByteArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//类的加载")]),a._v("\n                test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Class"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Class对象")]),a._v("\n                j"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("p",[s("strong",[a._v("不设置元空间的上限")])]),a._v(" "),s("ul",[s("li",[a._v("使用默认的 JVM 参数，元空间不设置上限")]),a._v(" "),s("li",[a._v("j的值能达到10000")])]),a._v(" "),s("p",[s("strong",[a._v("设置元空间的上限")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("JVM 参数")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-XX:MetaspaceSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("10m -XX:MaxMetaspaceSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("10m\n")])])])]),a._v(" "),s("li",[s("p",[a._v("元空间出现 OOM")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3331")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" in thread "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"main"')]),a._v(" java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OutOfMemoryError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Compressed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" space\n\tat java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineClass1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Native")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tat java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("756")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tat java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("635")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\tat cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("sxt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OOMTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OOMTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])])])])])]),a._v(" "),s("h3",{attrs:{id:"_3-4-如何解决oom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-如何解决oom"}},[a._v("#")]),a._v(" 3.4 如何解决OOM")]),a._v(" "),s("ul",[s("li",[a._v("要解决OOM异常或heap space的异常，一般的手段是首先通过内存映像分析工具（如Eclipse Memory Analyzer）对dump出来的堆转储快照进行分析，重点是确认内存中的对象是否是必要的，也就是要先分清楚到底是出现了内存泄漏（Memory Leak）还是内存溢出（Memory Overflow）")]),a._v(" "),s("li",[s("strong",[a._v("内存泄漏就是有大量的引用指向某些对象，但是这些对象以后不会使用了")]),a._v("，但是因为它们还和GC ROOT有关联，所以导致以后这些对象也不会被回收，这就是内存泄漏的问题")]),a._v(" "),s("li",[a._v("如果是内存泄漏，可进一步通过工具查看泄漏对象到GC Roots的引用链。于是就能"),s("strong",[a._v("找到泄漏对象是通过怎样的路径与GC Roots相关联并导致垃圾收集器无法自动回收它们的")]),a._v("。掌握了泄漏对象的类型信息，以及GC Roots引用链的信息，就可以比较准确地定位出泄漏代码的位置。")]),a._v(" "),s("li",[a._v("如果不存在内存泄漏，换句话说就是内存中的对象确实都还必须存活着，那就应当检查虚拟机的堆参数（-Xmx与-Xms），与机器物理内存对比看是否还可以调大，从代码上检查是否存在某些对象生命周期过长、持有状态时间过长的情况，尝试减少程序运行期的内存消耗。")])]),a._v(" "),s("h2",{attrs:{id:"四、方法区的内部结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、方法区的内部结构"}},[a._v("#")]),a._v(" 四、方法区的内部结构")]),a._v(" "),s("h3",{attrs:{id:"_4-1-方法区结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-方法区结构"}},[a._v("#")]),a._v(" 4.1 方法区结构")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"baf49ea02b1653220b32ecbbf483227c",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/c10630aaa75a4b25836998743294ca92.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/c10630aaa75a4b25836998743294ca92.png",alt:"baf49ea02b1653220b32ecbbf483227c"}})])]),a._v(" "),s("p",[a._v("《深入理解Java虚拟机》书中对方法区（Method Area）存储内容描述如下：它用于存储已被虚拟机"),s("strong",[a._v("加载的类型信息、常量、静态变量、即时编译器编译后的代码缓存")]),a._v("等。")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"0cfd6c5e9032dcd76d3bad801503cb01",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/6a030782135d4eca80febf9617221cad.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-04/6a030782135d4eca80febf9617221cad.png",alt:"0cfd6c5e9032dcd76d3bad801503cb01"}})])]),a._v(" "),s("h4",{attrs:{id:"_4-1-1-类型信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-类型信息"}},[a._v("#")]),a._v(" 4.1.1 类型信息")]),a._v(" "),s("p",[a._v("对每个加载的类型（类class、接口interface、枚举enum、注解annotation），JVM必须在方法区中存储以下类型信息：")]),a._v(" "),s("ul",[s("li",[a._v("这个类型的完整有效名称（全类名=包名.类名）")]),a._v(" "),s("li",[a._v("这个类型直接父类的完整有效名（对于interface或是java.lang.Object，都没有父类）")]),a._v(" "),s("li",[a._v("这个类型的修饰符（public，abstract，final的某个子集）")]),a._v(" "),s("li",[a._v("这个类型直接接口的一个有序列表")])]),a._v(" "),s("h4",{attrs:{id:"_4-1-2-域（field）信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-域（field）信息"}},[a._v("#")]),a._v(" 4.1.2 域（Field）信息")]),a._v(" "),s("ul",[s("li",[a._v("JVM必须在方法区中保存类型的所有域的相关信息以及域的声明顺序。")]),a._v(" "),s("li",[s("code",[a._v("域信息")]),a._v("通俗来讲是类的成员变量")]),a._v(" "),s("li",[a._v("域的相关信息包括：\n"),s("ul",[s("li",[a._v("域名称")]),a._v(" "),s("li",[a._v("域类型")]),a._v(" "),s("li",[a._v("域修饰符（public，private，protected，static，final，volatile，transient的某个子集）")])])])]),a._v(" "),s("h4",{attrs:{id:"_4-1-3-方法（method）信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-方法（method）信息"}},[a._v("#")]),a._v(" 4.1.3 方法（Method）信息")]),a._v(" "),s("p",[a._v("JVM必须保存所有方法的以下信息，同域信息一样包括声明顺序：")]),a._v(" "),s("ul",[s("li",[a._v("方法名称")]),a._v(" "),s("li",[a._v("方法的返回类型（包括 void 返回类型），void 在 Java 中对应的类为 void.class")]),a._v(" "),s("li",[a._v("方法参数的数量和类型（按顺序）")]),a._v(" "),s("li",[a._v("方法的修饰符（public，private，protected，static，final，synchronized，native，abstract的一个子集）")]),a._v(" "),s("li",[a._v("方法的字节码（bytecodes）、操作数栈、局部变量表及大小（abstract和native方法除外）")]),a._v(" "),s("li",[a._v("异常表（abstract和native方法除外），异常表记录每个异常处理的开始位置、结束位置、代码处理在程序计数器中的偏移地址、被捕获的异常类的常量池索引")])]),a._v(" "),s("p",[a._v("代码示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 测试方法区的内部构成\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodInnerStrucTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Serializable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//属性")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"测试方法的内部结构"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//构造器没写")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//方法")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"count = "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" cal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            result "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" cal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ul",[s("li",[a._v("反编译字节码文件")]),a._v(" "),s("li",[a._v("参数 -p 确保能查看 private 权限类型的字段或方法")])]),a._v(" "),s("p",[s("strong",[a._v("类型信息")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("在运行时方法区中，类信息中记录了哪个加载器加载了该类，同时类加载器也记录了它加载了哪些类")])]),a._v(" "),s("li",[s("p",[a._v("从反编译文件可以看出，字节码文件记录了 MethodInnerStrucTest 继承了哪些类，实现了哪些方法")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//类型信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("sxt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodInnerStrucTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Serializable")]),a._v("\n")])])])])]),a._v(" "),s("p",[s("strong",[a._v("域信息")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("descriptor: I 表示字段类型为 Integer")])]),a._v(" "),s("li",[s("p",[a._v("flags: ACC_PUBLIC 表示字段权限修饰符为 public")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//域信息")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    descriptor"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("I")]),a._v("\n    flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" ACC_PUBLIC\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    descriptor"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Ljava")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("lang"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" ACC_PRIVATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" ACC_STATIC\n")])])])])]),a._v(" "),s("p",[s("strong",[a._v("方法信息")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("descriptor: ( )V 表示方法返回值类型为 void")])]),a._v(" "),s("li",[s("p",[a._v("flags: ACC_PUBLIC 表示方法权限修饰符为 public")])]),a._v(" "),s("li",[s("p",[a._v("stack=3 表示操作数栈深度为 3")])]),a._v(" "),s("li",[s("p",[a._v("locals=2 表示局部变量个数为 2 个（实力方法包含 this）")])]),a._v(" "),s("li",[s("p",[a._v("test1( ) 方法虽然没有参数，但是其 args_size=1 ，这是因为将 this 作为了参数")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    descriptor"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("V")]),a._v("\n    flags"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" ACC_PUBLIC\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      stack"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" locals"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" bipush        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" istore_1\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" getstatic     #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Field java/lang/System.out:Ljava/io/PrintStream;")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v("           #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// class java/lang/StringBuilder")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" dup\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" invokespecial #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// Method java/lang/StringBuilder."<init>":()V')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" ldc           #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// String count =")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" invokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" iload_1\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" invokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" invokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Method java/lang/StringBuilder.toString:()Ljava/lang/String;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("25")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" invokevirtual #"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Method java/io/PrintStream.println:(Ljava/lang/String;)V")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LineNumberTable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalVariableTable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Start")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Length")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Slot")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Name")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Signature")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Lcn")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("sxt"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodInnerStrucTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" count   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("I")]),a._v("\n\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_4-2-域信息特殊情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-域信息特殊情况"}},[a._v("#")]),a._v(" 4.2 域信息特殊情况")]),a._v(" "),s("blockquote",[s("p",[a._v("non-final 类型的类变量")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("静态变量和类关联在一起，随着类的加载而加载")]),a._v("，他们成为类数据在逻辑上的一部分")]),a._v(" "),s("li",[a._v("类变量被类的所有实例共享，即使没有类实例时，你也可以访问它")])])]),a._v(" "),s("p",[a._v("代码示例：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("如下代码所示，即使我们把order设置为null，也不会出现空指针异常")])]),a._v(" "),s("li",[s("p",[a._v("这更加表明了 static 类型的字段和方法随着类的加载而加载，并不属于特定的类实例")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * non-final的类变量\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodAreaTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Order")]),a._v(" order "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Order")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])]),a._v(" "),s("p",[a._v("程序运行结果：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("hello"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("全局常量：static final")]),a._v(" "),s("ul",[s("li",[a._v("全局常量就是使用 static final 进行修饰")]),a._v(" "),s("li",[a._v("被声明为final的类变量的处理方法则不同，每个全局常量在编译的时候就会被分配了。")])])]),a._v(" "),s("p",[a._v("代码示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Order")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("反编译，查看字节码指令，可以发现 number 的值已经写死在字节码文件中了")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("  public static int count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    descriptor: I\n    flags: ACC_PUBLIC, ACC_STATIC\n\n  public static final int number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    descriptor: I\n    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n    ConstantValue: int "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n")])])]),s("h3",{attrs:{id:"_4-3-运行时常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-运行时常量池"}},[a._v("#")]),a._v(" 4.3 运行时常量池")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网文档"),s("OutboundLink")],1)]),a._v(" "),s("blockquote",[s("p",[a._v("运行时常量池与常量池")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("方法区，内部包含了运行时常量池")])]),a._v(" "),s("li",[s("strong",[a._v("字节码文件，内部包含了常量池")])]),a._v(" "),s("li",[a._v("要弄清楚方法区，需要理解清楚ClassFile，因为加载类的信息都在方法区。")]),a._v(" "),s("li",[a._v("要弄清楚方法区的运行时常量池，需要理解清楚ClassFile中的常量池。")])])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"0e19d36ac4135bff5d02d6b5c9f42587",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/aeaeb08fbdea449089bcea54e9fcb0d7.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/aeaeb08fbdea449089bcea54e9fcb0d7.png",alt:"0e19d36ac4135bff5d02d6b5c9f42587"}})])]),a._v(" "),s("blockquote",[s("p",[a._v("常量池")]),a._v(" "),s("ul",[s("li",[a._v("一个有效的字节码文件中除了包含类的版本信息、字段、方法以及接口等描述符信息外")]),a._v(" "),s("li",[a._v("还包含一项信息就是"),s("strong",[a._v("常量池表")]),a._v("（"),s("strong",[a._v("Constant Pool Table")]),a._v("），包括"),s("strong",[a._v("各种字面量和对类型、域和方法的符号引用")])])])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"aHR0cDovL2hleWdvLm9zcy1jbi1zaGFuZ2hhaS5hbGl5dW5jcy5jb20vaW1hZ2VzL2ltYWdlLTIwMjAwNzA4MTcyMzU3MDUyLnBuZw",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/1d1bf2c560ad42f18be25001e76e88f5.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/1d1bf2c560ad42f18be25001e76e88f5.png",alt:"aHR0cDovL2hleWdvLm9zcy1jbi1zaGFuZ2hhaS5hbGl5dW5jcy5jb20vaW1hZ2VzL2ltYWdlLTIwMjAwNzA4MTcyMzU3MDUyLnBuZw"}})])]),a._v(" "),s("blockquote",[s("p",[a._v("为什么需要常量池？")]),a._v(" "),s("ul",[s("li",[a._v("一个java源文件中的类、接口，编译后产生一个字节码文件。而Java中的字节码需要数据支持，通常这种数据会很大以至于不能直接存到字节码里，换另一种方式，可以存到常量池")]),a._v(" "),s("li",[a._v("这个字节码包含了指向常量池的引用。在动态链接的时候会用到运行时常量池")])])]),a._v(" "),s("p",[a._v("代码举例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleClass")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("a",{attrs:{"data-fancybox":"",title:"c3fe7afb842c0b8f90a09cae8812fd03",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/8405c051212447998d5fb761262d3dce.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/8405c051212447998d5fb761262d3dce.png",alt:"c3fe7afb842c0b8f90a09cae8812fd03"}})])]),a._v(" "),s("ul",[s("li",[a._v("虽然上述代码只有194字节，但是里面却使用了String、System、PrintStream及Object等结构。")]),a._v(" "),s("li",[a._v("如果不使用常量池，就需要将用到的类信息、方法信息等记录在当前的字节码文件中，造成文件臃肿")]),a._v(" "),s("li",[a._v("所以我们将所需用到的结构信息记录在常量池中，并通过"),s("strong",[a._v("引用的方式")]),a._v("，来加载、调用所需的结构")]),a._v(" "),s("li",[a._v("这里的代码量其实很少了，如果代码多的话，引用的结构将会更多，这里就需要用到常量池了。")])]),a._v(" "),s("blockquote",[s("p",[a._v("常量池中有什么")]),a._v(" "),s("ul",[s("li",[a._v("数量值")]),a._v(" "),s("li",[a._v("字符串值")]),a._v(" "),s("li",[a._v("类引用")]),a._v(" "),s("li",[a._v("字段引用")]),a._v(" "),s("li",[a._v("方法引用")])])]),a._v(" "),s("p",[a._v("代码举例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 测试方法区的内部构成\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodInnerStrucTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Comparable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Serializable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//属性")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"测试方法的内部结构"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//构造器没写")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//方法")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"count = "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("test2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" cal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            result "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" cal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("compareTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("ul",[s("li",[a._v("来看下最简单的 test1( ) 方法，带 # 的字节码指令，就使用到了常量池的引用")]),a._v(" "),s("li",[a._v("通过字节码指令可以看出，"),s("strong",[a._v("拼接字符串时，编译器帮我们造了个 StringBuilder 对象，然后调用其 append( ) 方法完成了字符串的拼接")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("public void test1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    descriptor: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("V\n    flags: ACC_PUBLIC\n    Code:\n      "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("stack")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(", "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("locals")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(", "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("args_size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(": bipush        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(": istore_1\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(": getstatic     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#3                  // Field java/lang/System.out:Ljava/io/PrintStream;")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(": new           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#4                  // class java/lang/StringBuilder")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v(": dup\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(": invokespecial "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#5                  // Method java/lang/StringBuilder."<init>":()V')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(": ldc           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#6                  // String count =")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(": invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(": iload_1\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),a._v(": invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(": invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("25")]),a._v(": invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#10                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v(": "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("return")]),a._v("\n      LineNumberTable:\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),a._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n        line "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("19")]),a._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v("\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("  this   Lcn/sxt/java/MethodInnerStrucTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" count   I\n\n")])])]),s("p",[a._v("常量池：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Constant pool:\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#1 = Methodref          #18.#52        // java/lang/Object."<init>":()V')]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#2 = Fieldref           #17.#53        // cn/sxt/java/MethodInnerStrucTest.num:I")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#3 = Fieldref           #54.#55        // java/lang/System.out:Ljava/io/PrintStream;")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#4 = Class              #56            // java/lang/StringBuilder")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#5 = Methodref          #4.#52         // java/lang/StringBuilder."<init>":()V')]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#6 = String             #57            // count =")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#7 = Methodref          #4.#58         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#8 = Methodref          #4.#59         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#9 = Methodref          #4.#60         // java/lang/StringBuilder.toString:()Ljava/lang/String;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#10 = Methodref          #61.#62        // java/io/PrintStream.println:(Ljava/lang/String;)V")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#11 = Class              #63            // java/lang/Exception")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#12 = Methodref          #11.#64        // java/lang/Exception.printStackTrace:()V")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#13 = Class              #65            // java/lang/String")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#14 = Methodref          #17.#66        // cn/sxt/java/MethodInnerStrucTest.compareTo:(Ljava/lang/String;)I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#15 = String             #67            // 测试方法的内部结构")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#16 = Fieldref           #17.#68        // cn/sxt/java/MethodInnerStrucTest.str:Ljava/lang/String;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#17 = Class              #69            // cn/sxt/java/MethodInnerStrucTest")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#18 = Class              #70            // java/lang/Object")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#19 = Class              #71            // java/lang/Comparable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#20 = Class              #72            // java/io/Serializable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#21 = Utf8               num")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#22 = Utf8               I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#23 = Utf8               str")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#24 = Utf8               Ljava/lang/String;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#25 = Utf8               <init>")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#26 = Utf8               ()V")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#27 = Utf8               Code")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#28 = Utf8               LineNumberTable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#29 = Utf8               LocalVariableTable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#30 = Utf8               this")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#31 = Utf8               Lcn/sxt/java/MethodInnerStrucTest;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#32 = Utf8               test1")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#33 = Utf8               count")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#34 = Utf8               test2")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#35 = Utf8               (I)I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#36 = Utf8               value")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#37 = Utf8               e")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#38 = Utf8               Ljava/lang/Exception;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#39 = Utf8               cal")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#40 = Utf8               result")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#41 = Utf8               StackMapTable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#42 = Class              #63            // java/lang/Exception")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#43 = Utf8               compareTo")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#44 = Utf8               (Ljava/lang/String;)I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#45 = Utf8               o")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#46 = Utf8               (Ljava/lang/Object;)I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#47 = Utf8               <clinit>")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#48 = Utf8               Signature")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#49 = Utf8               Ljava/lang/Object;Ljava/lang/Comparable<Ljava/lang/String;>;Ljava/io/Serializable;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#50 = Utf8               SourceFile")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#51 = Utf8               MethodInnerStrucTest.java")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#52 = NameAndType        #25:#26        // "<init>":()V')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#53 = NameAndType        #21:#22        // num:I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#54 = Class              #73            // java/lang/System")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#55 = NameAndType        #74:#75        // out:Ljava/io/PrintStream;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#56 = Utf8               java/lang/StringBuilder")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#57 = Utf8               count =")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#58 = NameAndType        #76:#77        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#59 = NameAndType        #76:#78        // append:(I)Ljava/lang/StringBuilder;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#60 = NameAndType        #79:#80        // toString:()Ljava/lang/String;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#61 = Class              #81            // java/io/PrintStream")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#62 = NameAndType        #82:#83        // println:(Ljava/lang/String;)V")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#63 = Utf8               java/lang/Exception")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#64 = NameAndType        #84:#26        // printStackTrace:()V")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#65 = Utf8               java/lang/String")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#66 = NameAndType        #43:#44        // compareTo:(Ljava/lang/String;)I")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#67 = Utf8               测试方法的内部结构")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#68 = NameAndType        #23:#24        // str:Ljava/lang/String;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#69 = Utf8               cn/sxt/java/MethodInnerStrucTest")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#70 = Utf8               java/lang/Object")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#71 = Utf8               java/lang/Comparable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#72 = Utf8               java/io/Serializable")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#73 = Utf8               java/lang/System")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#74 = Utf8               out")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#75 = Utf8               Ljava/io/PrintStream;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#76 = Utf8               append")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#77 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#78 = Utf8               (I)Ljava/lang/StringBuilder;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#79 = Utf8               toString")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#80 = Utf8               ()Ljava/lang/String;")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#81 = Utf8               java/io/PrintStream")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#82 = Utf8               println")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#83 = Utf8               (Ljava/lang/String;)V")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#84 = Utf8               printStackTrace")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("常量池总结")]),a._v(" "),s("p",[a._v("常量池，可以看做是一张表，虚拟机指令根据这张常量表找到要执行的类名、方法名、参数类型、字面量等信息")])]),a._v(" "),s("blockquote",[s("p",[a._v("运行时常量池")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("运行时常量池（Runtime Constant Pool）是方法区的一部分")]),a._v("。")]),a._v(" "),s("li",[s("strong",[a._v("常量池表（Constant Pool Table）是Class字节码文件的一部分，用于存放编译期生成的各种字面量与符号引用，这部分内容将在类加载后存放到方法区的运行时常量池中")]),a._v("。")]),a._v(" "),s("li",[a._v("运行时常量池，在加载类和接口到虚拟机后，就会创建对应的运行时常量池。")]),a._v(" "),s("li",[s("strong",[a._v("JVM为每个已加载的类型（类或接口）都维护一个常量池。池中的数据项像数组项一样，是通过索引访问的")]),a._v("。")]),a._v(" "),s("li",[a._v("运行时常量池中包含多种不同的常量，包括编译期就已经明确的数值字面量，也包括到运行期解析后才能够获得的方法或者字段引用。"),s("strong",[a._v("此时不再是常量池中的符号地址了，这里换为真实地址")]),a._v("。")]),a._v(" "),s("li",[a._v("运行时常量池，相对于Class文件常量池的另一重要特征是："),s("code",[a._v("具备动态性")]),a._v("。")]),a._v(" "),s("li",[a._v("运行时常量池类似于传统编程语言中的符号表（symbol table），但是它所包含的数据却比符号表要更加丰富一些。")]),a._v(" "),s("li",[a._v("当创建类或接口的运行时常量池时，如果构造运行时常量池所需的内存空间超过了方法区所能提供的最大值，则JVM会抛OutOfMemoryError异常。")])])]),a._v(" "),s("h2",{attrs:{id:"五、方法区使用举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、方法区使用举例"}},[a._v("#")]),a._v(" 五、方法区使用举例")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodAreaDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("strong",[a._v("字节码执行流程")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("字节码执行过程：初始状态")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"680b5595a82b9c34cd0d0d94037b268e",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/81b308aead49490b876f1466988b81ff.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/81b308aead49490b876f1466988b81ff.png",alt:"680b5595a82b9c34cd0d0d94037b268e"}})])])]),a._v(" "),s("li",[s("p",[a._v("首先将操作数500压入操作数栈中")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"0b269e0c8ccd71e52773555b8e3abcaa",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/df7f6c543be14ef080794274175495ef.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/df7f6c543be14ef080794274175495ef.png",alt:"0b269e0c8ccd71e52773555b8e3abcaa"}})])])]),a._v(" "),s("li",[s("p",[a._v("然后将操作数 500 从操作数栈中取出，存储到局部变量表中索引为 1 的位置")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"e014571122151d6ba508efd786a04066",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/3510fbdf23f9419c83dcb0a64da86f90.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/3510fbdf23f9419c83dcb0a64da86f90.png",alt:"e014571122151d6ba508efd786a04066"}})])])]),a._v(" "),s("li",[s("p",[a._v("将操作数100压入操作数栈中")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"9dfdb5cbe966f69b1b84c144adc81d32",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/7bb188a1ebfe402c86870216bf2b531c.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/7bb188a1ebfe402c86870216bf2b531c.png",alt:"9dfdb5cbe966f69b1b84c144adc81d32"}})])])]),a._v(" "),s("li",[s("p",[a._v("然后操作数 100 从操作数栈中取出，存储到局部变量表中索引为 2 的位置")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"533af4259e34671607c51fe4f7ff3a0c",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/3f1941eff00f451d8a62176a5cec1075.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/3f1941eff00f451d8a62176a5cec1075.png",alt:"533af4259e34671607c51fe4f7ff3a0c"}})])])]),a._v(" "),s("li",[s("p",[a._v("读取本地变量 1 ，压入操作数栈")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"dfb74df3a008b1c995f06b0fde79ceb2",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/06c67481b4bb4420873963a97ce800a1.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/06c67481b4bb4420873963a97ce800a1.png",alt:"dfb74df3a008b1c995f06b0fde79ceb2"}})])])]),a._v(" "),s("li",[s("p",[a._v("读取本地变量 2 ，压入操作数栈")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"dfb74df3a008b1c995f06b0fde79ceb2",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/f8b7485b172b4364854e7c85ab61a79e.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/f8b7485b172b4364854e7c85ab61a79e.png",alt:"dfb74df3a008b1c995f06b0fde79ceb2"}})])])]),a._v(" "),s("li",[s("p",[a._v("两数相除，计算结果放在操作数栈顶，之后执行 istore_3 指令，将计算结果从操作数栈中弹出，存入本地变量表 3 中")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"11a85fd42b5e71c6d529cb19bb7e2ccc",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/0075d64896fc4e488daea39bf4c4ce85.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/0075d64896fc4e488daea39bf4c4ce85.png",alt:"11a85fd42b5e71c6d529cb19bb7e2ccc"}})])])]),a._v(" "),s("li",[s("p",[a._v("将操作数 50 压入操作数栈")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"a8b31cd671ed586bd9e9c7f180929424",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/04e44cc70e2a44878de4e6712964d674.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/04e44cc70e2a44878de4e6712964d674.png",alt:"a8b31cd671ed586bd9e9c7f180929424"}})])])]),a._v(" "),s("li",[s("p",[a._v("将操作数 50 从栈顶弹出，保存在局部变量表 4 中")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"d1f24ea55f29434f701e8ba9c489151b",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/aaffa6d668d248da88e4e3113a9fb627.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/aaffa6d668d248da88e4e3113a9fb627.png",alt:"d1f24ea55f29434f701e8ba9c489151b"}})])])]),a._v(" "),s("li",[s("p",[a._v("获取 System.out 输出流的引用")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"8897b5696262467f9489633f66ceaa54",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/9c4f2a4b28a043fd8367bb5f8897907b.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/9c4f2a4b28a043fd8367bb5f8897907b.png",alt:"8897b5696262467f9489633f66ceaa54"}})])])]),a._v(" "),s("li",[s("p",[a._v("将本地变量表 3 的值取出，压入操作数栈中，准备进行加法运算")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"ed1acb80312c64eb23b82336a2f0eef6",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/50248cd954ef4465874b101681c769e3.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/50248cd954ef4465874b101681c769e3.png",alt:"ed1acb80312c64eb23b82336a2f0eef6"}})])])]),a._v(" "),s("li",[s("p",[a._v("将本地变量表 4 的值取出，压入操作数栈中，准备进行加法运算")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"f9d085c29c3aafd6cf5e324b23322567",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/5f699f4f36ba479783bfc83deaad0b1d.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/5f699f4f36ba479783bfc83deaad0b1d.png",alt:"f9d085c29c3aafd6cf5e324b23322567"}})])])]),a._v(" "),s("li",[s("p",[a._v("执行加法运算后，将计算结果放在操作数栈顶")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"507ad7ed6e762fe24ba8fe1e157ce728",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/5cb49d64da534f8e89979782b9f99d37.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/5cb49d64da534f8e89979782b9f99d37.png",alt:"507ad7ed6e762fe24ba8fe1e157ce728"}})])])]),a._v(" "),s("li",[s("p",[a._v("调用静态方法 println( ) ，输出加法结果")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"27264779c40b4f875c1c2d698984f636",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/369f221eba30448486332e25b9b30545.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/369f221eba30448486332e25b9b30545.png",alt:"27264779c40b4f875c1c2d698984f636"}})])])]),a._v(" "),s("li",[s("p",[a._v("main( ) 方法执行结束")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"7e30fdd9bb41371346f0e34c7917a464",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/4d273d45aa544d648e959201f755f96a.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/4d273d45aa544d648e959201f755f96a.png",alt:"7e30fdd9bb41371346f0e34c7917a464"}})])])])]),a._v(" "),s("blockquote",[s("p",[a._v("关于【符号引用 --\x3e 直接引用】的理解")]),a._v(" "),s("ol",[s("li",[a._v("上面代码调用 System.out.println( ) 方法时，首先需要看 System 类有没有加载，再看看 PrintStream 类有没有加载")]),a._v(" "),s("li",[a._v("如果没有加载，则执行加载，"),s("strong",[a._v("执行时，将常量池中的符号引用（字面量）转换为直接引用（真正的地址值）")])])])]),a._v(" "),s("blockquote",[s("p",[a._v("关于程序计数器的说明")]),a._v(" "),s("p",[a._v("程序计数器始终存储的都是当前字节码指令的索引地址，目的是为了方便记录方法调用后能够正常返回，或者是进行了CPU切换后，也能回到原来的代码继续执行。")])]),a._v(" "),s("h2",{attrs:{id:"六、方法区的演进细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、方法区的演进细节"}},[a._v("#")]),a._v(" 六、方法区的演进细节")]),a._v(" "),s("h3",{attrs:{id:"_6-1-永久代演进过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-永久代演进过程"}},[a._v("#")]),a._v(" 6.1 永久代演进过程")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("首先明确：只有Hotspot才有"),s("code",[a._v("永久代")]),a._v("。")])]),a._v(" "),s("li",[s("p",[a._v("BEA JRockit、IBMJ9等来说，是不存在永久代的概念的。原则上如何实现方法区属于虚拟机实现细节，不受《Java虚拟机规范》管束，并不要求统一")])]),a._v(" "),s("li",[s("p",[a._v("Hotspot中方法区的变化：")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("JDK 版本")]),a._v(" "),s("th",[a._v("演变细节")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("JDK1.6及以前")]),a._v(" "),s("td",[a._v("有永久代（permanent generation），静态变量存储在永久代上")])]),a._v(" "),s("tr",[s("td",[a._v("JDK1.7")]),a._v(" "),s("td",[a._v("有永久代，但已经逐步 “去永久代”，"),s("strong",[a._v("字符串常量池、静态变量从永久代中移除，保存在堆中")])])]),a._v(" "),s("tr",[s("td",[a._v("JDK1.8")]),a._v(" "),s("td",[a._v("无永久代，类型信息，字段，方法，常量保存在本地内存的元空间，但字符串常量池、静态变量仍然在堆中。")])])])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"1e567aebc5ce8e895b32e911c154646b",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/51c9e526428545738c551e1fe79647e6.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/51c9e526428545738c551e1fe79647e6.png",alt:"1e567aebc5ce8e895b32e911c154646b"}})])])])]),a._v(" "),s("p",[s("strong",[a._v("JDK6")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("方法区由永久代实现，使用 JVM 虚拟机内存")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"0beebf81ecda1594b9af9a7ab42edfb7",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/aeeef1cf22814f6089bb8cd818cfd974.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/aeeef1cf22814f6089bb8cd818cfd974.png",alt:"0beebf81ecda1594b9af9a7ab42edfb7"}})])])])]),a._v(" "),s("p",[s("strong",[a._v("JDK7")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("方法区由永久代实现，使用 JVM 虚拟机内存")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"7140d77a46fe6d01f49145f988847d8e",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/8f8cfc2e413c4dfd83b1d9fbf68c1af3.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/8f8cfc2e413c4dfd83b1d9fbf68c1af3.png",alt:"7140d77a46fe6d01f49145f988847d8e"}})])])])]),a._v(" "),s("p",[s("strong",[a._v("JDK8及以后")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("方法区由元空间实现，使用物理机本地内存")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"bf345a3818f589359d59345141ed2ccb",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/87f68b491f054d208d0115a41e2609f3.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/87f68b491f054d208d0115a41e2609f3.png",alt:"bf345a3818f589359d59345141ed2ccb"}})])])])]),a._v(" "),s("h3",{attrs:{id:"_6-2-永久代为什么会被元空间替代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-永久代为什么会被元空间替代"}},[a._v("#")]),a._v(" 6.2 永久代为什么会被元空间替代")]),a._v(" "),s("p",[s("a",{attrs:{href:"http://openjdk.java.net/jeps/122",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),s("OutboundLink")],1)]),a._v(" "),s("ul",[s("li",[a._v("官方的牵强解释：JRockit是和HotSpot融合后的结果，因为JRockit没有永久代，所以他们不需要配置永久代，HotSpot也就取消了永久代")]),a._v(" "),s("li",[a._v("随着Java8的到来，HotSpot VM中再也见不到永久代了。但是这并不意味着类的元数据信息也消失了。这些数据被移到了一个与堆不相连的本地内存区域，这个区域叫做元空间（Metaspace）。")])]),a._v(" "),s("blockquote",[s("p",[a._v("由于类的元数据分配在本地内存中，元空间的最大可分配空间就是系统可用内存空间，这项改动是很有必要的，原因有：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("为永久代设置空间大小是很难确定的")]),a._v(" "),s("ul",[s("li",[a._v("在某些场景下，如果动态加载类过多，容易产生Perm区的OOM。比如某个实际Web工程中，因为功能点比较多，在运行过程中，要不断动态地加载很多类，经常出现致命错误。Exception in thread 'dubbo client x.x connector' java.lang.OutOfMemoryError:PermGen space")]),a._v(" "),s("li",[a._v("而元空间和永久代之间最大的区别在于："),s("strong",[a._v("元空间并不在虚拟机中，而是使用本地内存")]),a._v("。因此，"),s("strong",[a._v("默认情况下，元空间的大小仅受本地内存限制")]),a._v("。")])])]),a._v(" "),s("li",[s("strong",[a._v("对永久代进行调优是很困难的。")]),a._v(" "),s("ul",[s("li",[a._v("方法区的垃圾收集主要回收两部分内容：常量池中废弃的常量和不再用的类型，方法区的调优主要是为了降低Full GC")]),a._v(" "),s("li",[a._v("有些人认为方法区（如HotSpot虚拟机中的元空间或者永久代）是没有垃圾收集行为的，其实不然。《Java虚拟机规范》对方法区的约束是非常宽松的，提到过可以不要求虚拟机在方法区中实现垃圾收集。事实上也确实有未实现或未能完整实现方法区类型卸载的收集器存在（如JDK11时期的ZGC收集器就不支持类卸载）。")]),a._v(" "),s("li",[s("strong",[a._v("一般来说这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻")]),a._v("。但是这部分区域的回收有时又确实是必要的。以前Sun公司的Bug列表中，曾出现过的若干个严重的Bug就是由于低版本的HotSpot虚拟机对此区域未完全回收而导致内存泄漏")])])])])]),a._v(" "),s("h3",{attrs:{id:"_6-3-字符串常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-字符串常量池"}},[a._v("#")]),a._v(" 6.3 字符串常量池")]),a._v(" "),s("blockquote",[s("p",[a._v("字符串常量池 StringTable 为什么要调整位置？")]),a._v(" "),s("ul",[s("li",[a._v("JDK7中将StringTable放到了堆空间中。因为永久代的回收效率很低，在Full GC的时候才会执行永久代的垃圾回收，而Full GC是老年代的空间不足、永久代不足时才会触发。")]),a._v(" "),s("li",[a._v("这就导致StringTable回收效率不高，而我们开发中会有大量的字符串被创建，回收效率低，导致永久代内存不足。放到堆里，能及时回收内存。")])])]),a._v(" "),s("h3",{attrs:{id:"_6-4-静态变量位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-静态变量位置"}},[a._v("#")]),a._v(" 6.4 静态变量位置")]),a._v(" "),s("blockquote",[s("p",[a._v("静态变量存放在哪里？")])]),a._v(" "),s("p",[a._v("代码示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 结论：\n *  静态变量在jdk6/7存在与永久代中，在jdk8存在于堆中 //private static byte[] arr\n *  静态引用对应的对象实体始终都存在堆空间 //new byte[1024 * 1024 * 100];\n *\n * jdk7：\n * -Xms200m -Xmx200m -XX:PermSize=300m -XX:MaxPermSize=300m -XX:+PrintGCDetails\n * jdk 8：\n * -Xms200m -Xmx200m -XX:MetaspaceSize=300m -XX:MaxMetaspaceSize=300m -XX:+PrintGCDetails\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticFieldTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//100MB")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticFieldTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("JVM参数")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-Xms200m -Xmx200m -XX:MetaspaceSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("300m -XX:MaxMetaspaceSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("300m -XX:+PrintGCDetails\n")])])]),s("p",[a._v("通过 GC 日志可以看出："),s("strong",[a._v("静态变量引用对应的对象实体始终都在堆空间中")]),a._v("（arr 数组对象直接怼到老年区去了）")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"3209843b3dfd9a922e66233347be97d5",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/40ce0722d1334cd4853d45c1d8b72972.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/40ce0722d1334cd4853d45c1d8b72972.png",alt:"3209843b3dfd9a922e66233347be97d5"}})])]),a._v(" "),s("p",[a._v("代码示例：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 《深入理解Java虚拟机》中的案例：\n * staticObj、instanceObj、localObj存放在哪里？\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticObjTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Test")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//静态属性")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),a._v(" staticObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//非静态属性")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),a._v(" instanceObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//局部变量")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),a._v(" localObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"done"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectHolder")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Test")]),a._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticObjTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ul",[s("li",[a._v("可以使用 JHSDB.exe，在JDK9的时候才引入的")]),a._v(" "),s("li",[a._v("分析：staticObj随着Test的类型信息存放在方法区，instanceObj随着Test的对象实例存放在Java堆，localObject则是存放在foo( )方法栈帧的局部变量表中。")]),a._v(" "),s("li",[a._v("测试发现：三个对象的数据在内存中的地址都落在Eden区范围内，所以结论："),s("strong",[a._v("只要是对象实例必然会在Java堆中分配")]),a._v("。")])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"2b5a02c763e76477e0830e345201db39",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/07893e0a4f8d496486733de6a0a802a0.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/07893e0a4f8d496486733de6a0a802a0.png",alt:"2b5a02c763e76477e0830e345201db39"}})])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("接着，找到了一个引用该staticObj对象的地方，是在一个java.lang.Class的实例里，并且给出了这个实例的地址，通过Inspector查看该对象实例，可以清楚看到这确实是一个java.lang.Class类型的对象实例，里面有一个名为staticobj的实例字段：")]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"e06e8137c69f868c2faa0892df4015ee",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/487d6c32c4cc4e228048706f6588b79c.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/487d6c32c4cc4e228048706f6588b79c.png",alt:"e06e8137c69f868c2faa0892df4015ee"}})])])]),a._v(" "),s("li",[s("p",[a._v("从《Java虚拟机规范》所定义的概念模型来看，所有Class相关的信息都应该存放在方法区之中，但方法区该如何实现，《Java虚拟机规范》并未做出规定，这就成了一件允许不同虚拟机自己灵活把握的事情。JDK7及其以后版本的HotSpot虚拟机选择把静态变量与类型在Java语言一端的映射Class对象存放在一起，存储于Java堆之中，从我们的实验中也明确验证了这一点")])])]),a._v(" "),s("h2",{attrs:{id:"七、方法区的垃圾回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、方法区的垃圾回收"}},[a._v("#")]),a._v(" 七、方法区的垃圾回收")]),a._v(" "),s("blockquote",[s("p",[a._v("方法区的垃圾收集")]),a._v(" "),s("ul",[s("li",[a._v("有些人认为方法区（如Hotspot虚拟机中的元空间或者永久代）是没有垃圾收集行为的，其实不然。")]),a._v(" "),s("li",[a._v("《Java虚拟机规范》对方法区的约束是非常宽松的，提到过可以不要求虚拟机在方法区中实现垃圾收集。事实上也确实有未实现或未能完整实现方法区类型卸载的收集器存在（如JDK11时期的ZGC收集器就不支持类卸载）。")]),a._v(" "),s("li",[a._v("一般来说这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻。但是这部分区域的回收有时又确实是必要的。以前sun公司的Bug列表中，曾出现过的若干个严重的Bug就是由于低版本的HotSpot虚拟机对此区域未完全回收而导致内存泄漏。")]),a._v(" "),s("li",[a._v("方法区的垃圾收集主要回收两部分内容："),s("strong",[a._v("常量池中废弃的常量和不再使用的类型")]),a._v("。")])])]),a._v(" "),s("h3",{attrs:{id:"_7-1-方法区常量的回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-方法区常量的回收"}},[a._v("#")]),a._v(" 7.1 方法区常量的回收")]),a._v(" "),s("ul",[s("li",[a._v("先来说说方法区内常量池之中主要存放的两大类常量：字面量和符号引用\n"),s("ul",[s("li",[a._v("字面量比较接近Java语言层次的常量概念，如文本字符串、被声明为final的常量值等")]),a._v(" "),s("li",[a._v("而符号引用则属于编译原理方面的概念，包括下面三类常量：\n"),s("ul",[s("li",[a._v("类和接口的全限定名")]),a._v(" "),s("li",[a._v("字段的名称和描述符")]),a._v(" "),s("li",[a._v("方法的名称和描述符")])])])])]),a._v(" "),s("li",[a._v("HotSpot虚拟机对常量池的回收策略是很明确的，"),s("strong",[a._v("只要常量池中的常量没有被任何地方引用，就可以被回收")]),a._v("。")]),a._v(" "),s("li",[a._v("回收废弃常量与回收Java堆中的对象非常类似。（关于常量的回收比较简单，重点是类的回收）")])]),a._v(" "),s("h3",{attrs:{id:"_7-2-方法区类的回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-方法区类的回收"}},[a._v("#")]),a._v(" 7.2 方法区类的回收")]),a._v(" "),s("ul",[s("li",[a._v("判定一个常量是否“废弃”还是相对简单，而要判定一个类型是否属于“不再被使用的类”的条件就比较苛刻了。需要同时满足下面三个条件：\n"),s("ul",[s("li",[a._v("该类所有的实例都已经被回收，也就是Java堆中不存在该类及其任何派生子类的实例。")]),a._v(" "),s("li",[a._v("加载该类的类加载器已经被回收，这个条件除非是经过精心设计的可替换类加载器的场景，如OSGi、JSP的重加载等，否则通常是很难达成的。")]),a._v(" "),s("li",[a._v("该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。")])])]),a._v(" "),s("li",[a._v("Java虚拟机被允许对满足上述三个条件的无用类进行回收，这里说的仅仅是“被允许”，而并不是和对象一样，没有引用了就必然会回收。关于是否要对类型进行回收，HotSpot虚拟机提供了-Xnoclassgc参数进行控制，还可以使用-verbose:class 以及 -XX：+TraceClass-Loading、-XX：+TraceClassUnLoading查看类加载和卸载信息")]),a._v(" "),s("li",[a._v("在大量使用反射、动态代理、CGLib等字节码框架，动态生成JSP以及 OSGi 这类频繁自定义类加载器的场景中，通常都需要Java虚拟机具备类型卸载的能力，以保证不会对方法区造成过大的内存压力。")])]),a._v(" "),s("h2",{attrs:{id:"八、运行时数据区总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、运行时数据区总结"}},[a._v("#")]),a._v(" 八、运行时数据区总结")]),a._v(" "),s("ul",[s("li",[a._v("线程私有结构：程序计数器、虚拟机栈、本地方法栈")]),a._v(" "),s("li",[a._v("每个虚拟机栈由具体的栈帧组成，在栈帧的动态链接中，保存至对方法的引用")]),a._v(" "),s("li",[a._v("方法区在 JDK7 之前，使用永久代实现，在 JDK8 之后，使用元空间实现")]),a._v(" "),s("li",[a._v("Minor GC 针对于新生区，Major GC 针对于老年区，Full GC 针对于整个堆空间和方法区")])]),a._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"478eb938c129ef2a177540994a090414",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/575516d3b08d42718560cf8edfb67aac.jpg"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-05/575516d3b08d42718560cf8edfb67aac.jpg",alt:"478eb938c129ef2a177540994a090414"}})])]),a._v(" "),s("h2",{attrs:{id:"九、面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、面试题"}},[a._v("#")]),a._v(" 九、面试题")]),a._v(" "),s("blockquote",[s("p",[a._v("百度")]),a._v(" "),s("ul",[s("li",[a._v("说一下JVM内存模型吧，有哪些区？分别干什么的？")])])]),a._v(" "),s("blockquote",[s("p",[a._v("字节跳动")]),a._v(" "),s("ul",[s("li",[a._v("Java的内存分区")]),a._v(" "),s("li",[a._v("讲讲vm运行时数据库区")]),a._v(" "),s("li",[a._v("什么时候对象会进入老年代？")])])]),a._v(" "),s("blockquote",[s("p",[a._v("蚂蚁金服")]),a._v(" "),s("ul",[s("li",[a._v("Java8的内存分代改进")]),a._v(" "),s("li",[a._v("JVM内存分哪几个区，每个区的作用是什么？")]),a._v(" "),s("li",[a._v("JVM内存分布/内存结构？栈和堆的区别？堆的结构？为什么两个survivor区？")]),a._v(" "),s("li",[a._v("Eden和survior的比例分配")])])]),a._v(" "),s("blockquote",[s("p",[a._v("小米")]),a._v(" "),s("ul",[s("li",[a._v("jvm内存分区，为什么要有新生代和老年代")])])]),a._v(" "),s("blockquote",[s("p",[a._v("京东")]),a._v(" "),s("ul",[s("li",[a._v("JVM的内存结构，Eden和Survivor比例。")]),a._v(" "),s("li",[a._v("JVM内存为什么要分成新生代，老年代，持久代。新生代中为什么要分为Eden和survivor。")])])]),a._v(" "),s("blockquote",[s("p",[a._v("天猫")]),a._v(" "),s("ul",[s("li",[a._v("Jvm内存模型以及分区，需要详细到每个区放什么。")]),a._v(" "),s("li",[a._v("JVM的内存模型，Java8做了什么改")])])]),a._v(" "),s("blockquote",[s("p",[a._v("拼多多")]),a._v(" "),s("ul",[s("li",[a._v("JVM内存分哪几个区，每个区的作用是什么？")])])]),a._v(" "),s("blockquote",[s("p",[a._v("美团")]),a._v(" "),s("ul",[s("li",[a._v("java内存分配")]),a._v(" "),s("li",[a._v("jvm的永久代中会发生垃圾回收吗？")]),a._v(" "),s("li",[a._v("jvm内存分区，为什么要有新生代和老年代？")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);