(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{383:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("[toc]\n#SHELL编程模块课程目标")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("① Shell的基本语法结构")]),s._v(" "),a("p",[s._v("如：变量定义、条件判断、循环语句(for、until、while)、分支语句、函数和数组等；")]),s._v(" "),a("p",[s._v("② 基本正则表达式的运用;")]),s._v(" "),a("p",[s._v("③ 文件处理三剑客：grep、sed、awk工具的使用；")]),s._v(" "),a("p",[s._v("④ 使用shell脚本完成一些较复杂的任务，如：服务搭建、批量处理等。")]),s._v(" "),a("p",[a("em",[a("strong",[s._v("说明：以上内容仅仅是基本要求，还有很多更深更难的语法需要扩充学习。")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("本节目标")])]),s._v(" "),a("ul",[a("li",[s._v("==熟练掌握shell变量的定义和获取（重点）==")]),s._v(" "),a("li",[s._v("==能够进行shell简单的四则运算==")])])])]),s._v(" "),a("h1",{attrs:{id:"一、shell介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、shell介绍"}},[s._v("#")]),s._v(" 一、SHELL介绍")]),s._v(" "),a("p",[a("strong",[s._v("前言：")])]),s._v(" "),a("p",[s._v('计算机只能认识（识别）机器语言(0和1)，如（11000000 这种）。但是，我们的程序猿们不能直接去写01这样的代码，所以，要想将程序猿所开发的代码在计算机上运行，就必须找"人"（工具）来==翻译成机器语言==，这个"人"(工具)就是我们常常所说的**==编译器=='),a("strong",[s._v("或者")]),s._v("==解释器==**。")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/6cbf67b79ad64b1587b6cabda77b089d.png",alt:"编译和解释型语言区别"}})]),s._v(" "),a("p",[s._v("##1. 编程语言分类")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("编译型语言：")])])]),s._v(" "),a("p",[s._v("​    ==程序在执行之前需要一个专门的编译过程==，把程序编译成为机器语言文件，运行时不需要重新翻译，直接使用编译的结果就行了。程序执行效率高，依赖编译器，跨平台性差些。如C、C++")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("解释型语言：")])])]),s._v(" "),a("p",[s._v("​    程序不需要编译，程序在运行时由**==解释器==**翻译成机器语言，每执行一次都要翻译一次。因此效率比较低。比如Python/JavaScript/ Perl /ruby/==Shell==等都是解释型语言。")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/f8ba37d8d3b94057879d82fbaca58e3c.png",alt:"语言分类"}})]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("总结")])])]),s._v(" "),a("p",[s._v("编译型语言比解释型语言==速度较快==，但是不如解释型语言==跨平台性好==。如果做底层开发或者大型应用程序或者操作系开发一==般都用编译型语言==；如果是一些服务器脚本及一些辅助的接口，对速度要求不高、对各个平台的==兼容性有要求==的话则一般都用==解释型语言==。")]),s._v(" "),a("p",[s._v("##2. shell简介")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/f8747c66a4b74bfb83a71fec9eaab3cc.png",alt:"00_shell介绍"}})]),s._v(" "),a("p",[a("strong",[s._v("总结：")])]),s._v(" "),a("ul",[a("li",[s._v("==shell就是人机交互的一个桥梁==")]),s._v(" "),a("li",[s._v("shell的种类")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/shells ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sh\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#是bash的一个快捷方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bash\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bash是大多数Linux默认的shell，包含的功能几乎可以涵盖shell所有的功能")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sbin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nologin\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#表示非交互，不能登录操作系统")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dash\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#小巧，高效，功能相比少一些")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("csh\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#具有C语言风格的一种shell，具有许多特性，但也有一些缺陷")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("tcsh\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#是csh的增强版，完全兼容csh")]),s._v("\n")])])]),a("p",[a("strong",[s._v("思考：终端和shell有什么关系？")])]),s._v(" "),a("p",[a("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-07-18/0d80737b47534cb48fcc3288d0bca509.png",alt:"01_shell介绍"}})]),s._v(" "),a("p",[s._v("##3. shell脚本")]),s._v(" "),a("h3",{attrs:{id:"㈠-什么是shell脚本？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-什么是shell脚本？"}},[s._v("#")]),s._v(" ㈠ 什么是shell脚本？")]),s._v(" "),a("ul",[a("li",[s._v("一句话概括")])]),s._v(" "),a("p",[s._v("简单来说就是将==需要执行的命令==保存到文本中，==按照顺序执行==。它是解释型的，意味着不需要编译。")]),s._v(" "),a("ul",[a("li",[s._v("准确叙述")])]),s._v(" "),a("p",[a("strong",[s._v("若干命令 + 脚本的基本格式 + 脚本特定语法 + 思想= shell脚本")])]),s._v(" "),a("h3",{attrs:{id:"㈡-什么时候用到脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-什么时候用到脚本"}},[s._v("#")]),s._v(" ㈡ 什么时候用到脚本?")]),s._v(" "),a("p",[a("strong",[s._v("重复化")]),s._v("、复杂化的工作，通过把工作的命令写成脚本，以后仅仅需要执行脚本就能完成这些工作。")]),s._v(" "),a("h3",{attrs:{id:"㈢-shell脚本能干啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-shell脚本能干啥"}},[s._v("#")]),s._v(" ㈢ shell脚本能干啥?")]),s._v(" "),a("p",[s._v("①自动化软件部署\tLAMP/LNMP/Tomcat...")]),s._v(" "),a("p",[s._v("②自动化管理\t\t系统初始化脚本、批量更改主机密码、推送公钥...")]),s._v(" "),a("p",[s._v("③==自动化分析处理==\t 统计网站访问量")]),s._v(" "),a("p",[s._v("④==自动化备份==\t\t数据库备份、日志转储...")]),s._v(" "),a("p",[s._v("⑤自动化监控脚本")]),s._v(" "),a("h3",{attrs:{id:"㈣-如何学习shell脚本？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-如何学习shell脚本？"}},[s._v("#")]),s._v(" ㈣ 如何学习shell脚本？")]),s._v(" "),a("ol",[a("li",[s._v("尽可能记忆更多的命令(记忆命令使用功能和场景)")]),s._v(" "),a("li",[s._v("掌握脚本的标准的格式（指定魔法字节、使用标准的执行方式运行脚本）")]),s._v(" "),a("li",[s._v("必须=="),a("strong",[s._v("熟悉掌握")]),s._v("==脚本的基本语法（重点)")])]),s._v(" "),a("h3",{attrs:{id:"㈤-学习shell脚本的秘诀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈤-学习shell脚本的秘诀"}},[s._v("#")]),s._v(" ㈤ 学习shell脚本的秘诀")]),s._v(" "),a("p",[s._v("多看（看懂）——>模仿（多练）——>多思考（多写）")]),s._v(" "),a("h3",{attrs:{id:"㈥-shell脚本的基本写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈥-shell脚本的基本写法"}},[s._v("#")]),s._v(" ㈥ shell脚本的基本写法")]),s._v(" "),a("p",[s._v("1）"),a("strong",[s._v("脚本第一行")]),s._v("，魔法字符=="),a("strong",[s._v("#!")]),s._v("==指定解释器【==必写==】")]),s._v(" "),a("p",[a("code",[s._v("#!/bin/bash")]),s._v("  表示以下内容使用bash解释器解析")]),s._v(" "),a("p",[a("strong",[s._v("==注意：==")]),s._v("\n如果直接将解释器路径写死在脚本里，可能在某些系统就会存在找不到解释器的兼容性问题，所以可以使用:"),a("strong",[s._v("=="),a("code",[s._v("#!/bin/env 解释器")]),s._v("==")]),s._v(" "),a("strong",[s._v("=="),a("code",[s._v("#!/bin/env bash")]),s._v("==")])]),s._v(" "),a("p",[s._v("2）"),a("strong",[s._v("脚本第二部分")]),s._v("，注释(#号)说明，对脚本的基本信息进行描述【可选】")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/env bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下内容是对脚本的基本信息的描述")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Name: 名字")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Desc:描述describe")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Path:存放路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Usage:用法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Update:更新时间")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下面就是脚本的具体内容")]),s._v("\ncommands\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("3）"),a("strong",[s._v("脚本第三部分")]),s._v("，脚本要实现的具体代码内容")]),s._v(" "),a("h3",{attrs:{id:"㈦-shell脚本的执行方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈦-shell脚本的执行方法"}},[s._v("#")]),s._v(" ㈦ shell脚本的执行方法")]),s._v(" "),a("ul",[a("li",[s._v("标准脚本执行方法（建议）")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 编写人生第一个shell脚本\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/env bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下内容是对脚本的基本信息的描述")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Name: first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Desc: num1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Path: /shell01/first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Usage:/shell01/first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Update:2019-05-05")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 脚本增加可执行权限\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chmod +x first_shell.sh")]),s._v("\n\n3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 标准方式执行脚本\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pwd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("shell01\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /shell01/first_shell.sh")]),s._v("\n或者\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./first_shell.sh")]),s._v("\n\n注意：标准执行方式脚本必须要有可执行权限。\n")])])]),a("ul",[a("li",[s._v("非标准的执行方法（不建议）")])]),s._v(" "),a("ol",[a("li",[s._v("直接在命令行指定解释器执行")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sh first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash -x first_shell.sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v("\nhello world\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v("\nhello world\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v("\nhello world\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("x:一般用于排错，查看脚本的执行过程\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n:用来查看脚本的语法是否有问题\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("使用"),a("code",[s._v("source")]),s._v("命令读取脚本文件,执行文件里的代码")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell01]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source first_shell.sh")]),s._v("\nhello world\nhello world\nhello world\n")])])]),a("p",[s._v("**小试牛刀：**写一个木有灵魂的脚本，要求如下：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("删除/tmp/目录下的所有文件")])]),s._v(" "),a("li",[a("p",[s._v("然后在/tmp目录里创建3个目录，分别是dir1~dir3")])]),s._v(" "),a("li",[a("p",[s._v("拷贝/etc/hosts文件到刚创建的dir1目录里")])]),s._v(" "),a("li",[a("p",[s._v('最后打印"==报告首长，任务已于2019-05-05 10:10:10时间完成=="内容')]),s._v(" "),a("p",[a("code",[s._v("echo \"报告首长，任务已于$(date +'%F %T')\"")])])])]),s._v(" "),a("h1",{attrs:{id:"二、变量的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、变量的定义"}},[s._v("#")]),s._v(" 二、变量的定义")]),s._v(" "),a("h2",{attrs:{id:"_1-变量是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-变量是什么？"}},[s._v("#")]),s._v(" 1. 变量是什么？")]),s._v(" "),a("p",[s._v("一句话概括：变量是用来临时保存数据的，该数据是可以变化的数据。")]),s._v(" "),a("h2",{attrs:{id:"_2-什么时候需要定义变量？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么时候需要定义变量？"}},[s._v("#")]),s._v(" 2. 什么时候需要定义变量？")]),s._v(" "),a("ul",[a("li",[s._v("如果某个内容需要多次使用，并且在代码中"),a("strong",[s._v("重复出现")]),s._v("，那么可以用变量代表该内容。这样在修改内容的时候，仅仅需要修改变量的值。")]),s._v(" "),a("li",[s._v("在代码运作的过程中，可能会把某些命令的执行结果保存起来，后续代码需要使用这些结果，就可以直接使用这个变量。")])]),s._v(" "),a("h2",{attrs:{id:"_3-变量如何定义？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-变量如何定义？"}},[s._v("#")]),s._v(" 3.变量如何定义？")]),s._v(" "),a("p",[a("strong",[s._v("变量名=====变量值")])]),s._v(" "),a("p",[s._v("变量名：用来临时保存数据的")]),s._v(" "),a("p",[s._v("变量值：就是临时的可变化的数据")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=hello\t\t\t定义变量A")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# echo $A\t\t\t调用变量A，要给钱的，不是人民币是美元"$"')]),s._v("\nhello\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${A}\t\t还可以这样调用，不管你的姿势多优雅，总之要给钱")]),s._v("\nhello\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=world\t\t\t因为是变量所以可以变，移情别恋是常事")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A\t\t\t不管你是谁，只要调用就要给钱")]),s._v("\nworld\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset A\t\t\t不跟你玩了，取消变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A\t\t\t从此，我单身了，你可以给我介绍任何人")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"_4-变量的定义规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量的定义规则"}},[s._v("#")]),s._v(" 4. 变量的定义规则")]),s._v(" "),a("p",[s._v("虽然可以给变量（变量名）赋予任何值；但是，对于==变量名==也是要求的！😒")]),s._v(" "),a("h3",{attrs:{id:"㈠-变量名区分大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-变量名区分大小写"}},[s._v("#")]),s._v(" ㈠ 变量名区分大小写")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a=world")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A")]),s._v("\nhello\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $a")]),s._v("\nworld\n")])])]),a("h3",{attrs:{id:"㈡-变量名不能有特殊符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-变量名不能有特殊符号"}},[s._v("#")]),s._v(" ㈡ 变量名不能有特殊符号")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *A=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("A=hello: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ?A=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: ?A=hello: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @A=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: @A=hello: command not found\n\n特别说明：对于有空格的字符串给变量赋值时，要用引号引起来\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=hello world")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: world: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# A="hello world"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A='hello world'")]),s._v("\n")])])]),a("h3",{attrs:{id:"㈢-变量名不能以数字开头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-变量名不能以数字开头"}},[s._v("#")]),s._v(" ㈢ 变量名不能以数字开头")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1A=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: 1A=hello: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A1=hello")]),s._v("\n注意：不能以数字开头并不代表变量名中不能包含数字呦。\n")])])]),a("h3",{attrs:{id:"㈣-等号两边不能有任何空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-等号两边不能有任何空格"}},[s._v("#")]),s._v(" ㈣ 等号两边不能有任何空格")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A =123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: A: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A= 123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: 123: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A = 123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: A: command not found\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A")]),s._v("\n123\n")])])]),a("h3",{attrs:{id:"㈤-变量名尽量做到见名知意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈤-变量名尽量做到见名知意"}},[s._v("#")]),s._v(" ㈤ 变量名尽量做到见名知意")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("NTP_IP=10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("DIR")]),s._v("="),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("u01"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("app1\nTMP_FILE="),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("log"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n说明：一般变量名使用大写（小写也可以），不要同一个脚本中变量全是a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c等不容易阅读\n")])])]),a("h2",{attrs:{id:"_5-变量的定义方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-变量的定义方式有哪些？"}},[s._v("#")]),s._v(" 5. 变量的定义方式有哪些？")]),s._v(" "),a("h3",{attrs:{id:"㈠-基本方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-基本方式"}},[s._v("#")]),s._v(" ㈠ 基本方式")]),s._v(" "),a("blockquote",[a("p",[s._v("直接赋值给一个变量")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=1234567")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A")]),s._v("\n1234567\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${A:2:4}\t\t表示从A变量中第3个字符开始截取，截取4个字符")]),s._v("\n3456\n\n说明：\n$变量名 和 $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("的异同\n相同点：都可以调用变量\n不同点：$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("可以只截取变量的一部分，而$变量名不可以\n")])])]),a("h3",{attrs:{id:"㈡-命令执行结果赋值给变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-命令执行结果赋值给变量"}},[s._v("#")]),s._v(" ㈡ 命令执行结果赋值给变量")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# B=`date +%F`")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $B")]),s._v("\n2019"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("04"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("16\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# C=$(uname -r)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $C")]),s._v("\n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("32"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("696"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("el6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x86_64\n")])])]),a("h3",{attrs:{id:"㈢-交互式定义变量-read"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-交互式定义变量-read"}},[s._v("#")]),s._v(" ㈢ ==交互式定义变量(read)==")]),s._v(" "),a("p",[s._v("**目的：**让==用户自己==给变量赋值，比较灵活。")]),s._v(" "),a("p",[a("strong",[s._v("语法：")]),a("code",[s._v("read [选项] 变量名")])]),s._v(" "),a("p",[a("strong",[s._v("常见选项：")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("释义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("-p")]),s._v(" "),a("td",[s._v("定义提示用户的信息")])]),s._v(" "),a("tr",[a("td",[s._v("-n")]),s._v(" "),a("td",[s._v("定义字符数（限制变量值的长度）")])]),s._v(" "),a("tr",[a("td",[s._v("-s")]),s._v(" "),a("td",[s._v("不显示（不显示用户输入的内容）")])]),s._v(" "),a("tr",[a("td",[s._v("-t")]),s._v(" "),a("td",[s._v("定义超时时间，默认单位为秒（限制用户输入变量值的超时时间）")])])])]),s._v(" "),a("p",[a("strong",[s._v("举例说明：")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("用法1：用户自己定义变量值\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read name")]),s._v("\nharry\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $name")]),s._v("\nharry\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# read -p "Input your name:" name')]),s._v("\nInput your name:tom\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $name")]),s._v("\ntom\n")])])]),a("p",[s._v("用法2：变量值来自文件")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@MissHou ~]# cat 1.txt \n10.1.1.1 255.255.255.0\n\n[root@MissHou ~]# read ip mask < 1.txt \n[root@MissHou ~]# echo $ip\n10.1.1.1\n[root@MissHou ~]# echo $mask\n255.255.255.0\n")])])]),a("h3",{attrs:{id:"㈣-定义有类型的变量-declare"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-定义有类型的变量-declare"}},[s._v("#")]),s._v(" ㈣ 定义有类型的变量( declare)")]),s._v(" "),a("p",[a("strong",[s._v("目的：")]),s._v(" 给变量做一些限制，固定变量的类型，比如：整型、只读")]),s._v(" "),a("p",[a("strong",[s._v("用法：")]),a("code",[s._v("declare 选项 变量名=变量值")])]),s._v(" "),a("p",[a("strong",[s._v("常用选项：")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("释义")]),s._v(" "),a("th",[s._v("举例")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("==-i==")]),s._v(" "),a("td",[s._v("将变量看成整数")]),s._v(" "),a("td",[s._v("declare -i A=123")])]),s._v(" "),a("tr",[a("td",[s._v("==-r==")]),s._v(" "),a("td",[s._v("定义只读变量")]),s._v(" "),a("td",[s._v("declare -r B=hello")])]),s._v(" "),a("tr",[a("td",[s._v("-a")]),s._v(" "),a("td",[s._v("定义普通数组；查看普通数组")]),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("-A")]),s._v(" "),a("td",[s._v("定义关联数组；查看关联数组")]),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("-x")]),s._v(" "),a("td",[s._v("将变量通过环境导出")]),s._v(" "),a("td",[s._v("declare -x AAA=123456 等于 export AAA=123456")])])])]),s._v(" "),a("p",[a("strong",[s._v("举例说明：")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -i A=123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A")]),s._v("\n123\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A")]),s._v("\n0\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -r B=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $B")]),s._v("\nhello\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# B=world")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: B: readonly variable\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset B")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: unset: B: cannot unset: readonly variable\n")])])]),a("h2",{attrs:{id:"_6-变量的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-变量的分类"}},[s._v("#")]),s._v(" 6. 变量的分类")]),s._v(" "),a("h3",{attrs:{id:"㈠-本地变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-本地变量"}},[s._v("#")]),s._v(" ㈠ 本地变量")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("==本地变量==")]),s._v("：当前用户自定义的变量。当前进程中有效，其他进程及当前进程的子进程无效。")])]),s._v(" "),a("h3",{attrs:{id:"㈡-环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-环境变量"}},[s._v("#")]),s._v(" ㈡ 环境变量")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("环境变量")]),s._v("：当前进程有效，并且能够被"),a("strong",[s._v("子进程")]),s._v("调用。\n"),a("ul",[a("li",[a("code",[s._v("env")]),s._v("查看当前用户的环境变量")]),s._v(" "),a("li",[a("code",[s._v("set")]),s._v("==查询当前用户的所有变量(临时变量与环境变量)==")]),s._v(" "),a("li",[a("code",[s._v("export 变量名=变量值")]),s._v("    或者  "),a("code",[s._v("变量名=变量值；export 变量名")])])])])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export A=hello\t\t临时将一个本地变量（临时变量）变成环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env|grep ^A")]),s._v("\nA=hello\n\n永久生效：\nvim "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("profile 或者 ~"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bashrc\nexport A=hello\n或者\nA=hello\nexport A\n\n说明：系统中有一个变量PATH，环境变量\nexport PATH="),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin:"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PATH")]),s._v("\n")])])]),a("h3",{attrs:{id:"㈢-全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-全局变量"}},[s._v("#")]),s._v(" ㈢ 全局变量")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("全局变量")]),s._v("：全局所有的用户和程序都能调用，且继承，新建的用户也默认能调用.")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("解读相关配置文件")])])])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("文件名")]),s._v(" "),a("th",[s._v("说明")]),s._v(" "),a("th",[s._v("备注")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("$HOME/.bashrc")]),s._v(" "),a("td",[s._v("当前用户的bash信息,用户==登录==时读取")]),s._v(" "),a("td",[s._v("定义别名、umask、函数等")])]),s._v(" "),a("tr",[a("td",[s._v("$HOME/.bash_profile")]),s._v(" "),a("td",[s._v("当前用户的环境变量，用户==登录==时读取")]),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("$HOME/.bash_logout")]),s._v(" "),a("td",[s._v("当前用户==退出==当前shell时最后读取")]),s._v(" "),a("td",[s._v("定义用户退出时执行的程序等")])]),s._v(" "),a("tr",[a("td",[s._v("/etc/bashrc")]),s._v(" "),a("td",[s._v("全局的bash信息，所有用户都生效")]),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("/etc/profile")]),s._v(" "),a("td",[s._v("全局环境变量信息")]),s._v(" "),a("td",[s._v("系统和所有用户都生效")])]),s._v(" "),a("tr",[a("td",[s._v("$HOME/.bash_history")]),s._v(" "),a("td",[s._v("用户的历史命令")]),s._v(" "),a("td",[s._v("history -w   保存历史记录         history -c  清空历史记录")])])])]),s._v(" "),a("p",[s._v("**说明：**以上文件修改后，都需要重新==source==让其生效或者退出重新登录。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("用户登录")]),s._v("系统"),a("strong",[s._v("读取")]),s._v("相关==文件的顺序==\n"),a("ol",[a("li",[a("code",[s._v("/etc/profile")])]),s._v(" "),a("li",[a("code",[s._v("$HOME/.bash_profile")])]),s._v(" "),a("li",[a("code",[s._v("$HOME/.bashrc")])]),s._v(" "),a("li",[a("code",[s._v("/etc/bashrc")])]),s._v(" "),a("li",[a("code",[s._v("$HOME/.bash_logout")])])])])]),s._v(" "),a("h3",{attrs:{id:"㈣-系统变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-系统变量"}},[s._v("#")]),s._v(" ㈣ ==系统变量==")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("系统变量(内置bash中变量)")]),s._v(" ： shell本身已经固定好了它的名字和作用.")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("内置变量")]),s._v(" "),a("th",[s._v("含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("==$?==")]),s._v(" "),a("td",[s._v("上一条命令执行后返回的状态；状态值为0表示执行正常，==非0==表示执行异常或错误")])]),s._v(" "),a("tr",[a("td",[s._v("$0")]),s._v(" "),a("td",[s._v("当前执行的程序或脚本名")])]),s._v(" "),a("tr",[a("td",[s._v("==$#==")]),s._v(" "),a("td",[s._v("脚本后面接的参数的==个数==")])]),s._v(" "),a("tr",[a("td",[s._v("==$*==")]),s._v(" "),a("td",[s._v("脚本后面==所有参数==，参数当成一个整体输出，每一个变量参数之间以空格隔开")])]),s._v(" "),a("tr",[a("td",[s._v("==$@==")]),s._v(" "),a("td",[s._v("脚本后面==所有参数==，参数是独立的，也是全部输出")])]),s._v(" "),a("tr",[a("td",[s._v("==$1~$9==")]),s._v(" "),a("td",[s._v("脚本后面的==位置参数==，$1表示第1个位置参数，依次类推")])]),s._v(" "),a("tr",[a("td",[s._v("${10}~${n}")]),s._v(" "),a("td",[s._v("扩展位置参数,第10个位置变量必须用{}大括号括起来(2位数字以上扩起来)")])]),s._v(" "),a("tr",[a("td",[s._v("==$$==")]),s._v(" "),a("td",[s._v("当前所在进程的进程号，如"),a("code",[s._v("echo $$")])])]),s._v(" "),a("tr",[a("td",[s._v("$！")]),s._v(" "),a("td",[s._v("后台运行的最后一个进程号 (当前终端）")])]),s._v(" "),a("tr",[a("td",[s._v("!$")]),s._v(" "),a("td",[s._v("调用最后一条命令历史中的==参数==")])])])]),s._v(" "),a("ul",[a("li",[s._v("进一步了解位置参数"),a("code",[s._v("$1~${n}")])])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#了解shell内置变量中的位置参数含义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\$# = $#"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\$* = $*"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\$@ = $@"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$11")]),s._v(' = ${11}"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$12")]),s._v(' = ${12}"')]),s._v(" \n")])])]),a("ul",[a("li",[s._v("进一步了解$*和​$@的区别")])]),s._v(" "),a("p",[a("code",[s._v("$*")]),s._v("：表示将变量看成一个整体\n"),a("code",[s._v("$@")]),s._v("：表示变量是独立的")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i in "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\ndone\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"======我是分割线======="')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i in "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$*"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\ndone\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash 3.sh a b c")]),s._v("\na\nb\nc\n======我是分割线=======\na b c\n\n")])])]),a("h1",{attrs:{id:"三、简单四则运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、简单四则运算"}},[s._v("#")]),s._v(" 三、简单四则运算")]),s._v(" "),a("p",[s._v("算术运算：默认情况下，shell就只能支持简单的==整数==运算")]),s._v(" "),a("p",[s._v("运算内容：加(+)、减(-)、乘(*)、除(/)、求余数（%）")]),s._v(" "),a("h2",{attrs:{id:"_1-四则运算符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-四则运算符号"}},[s._v("#")]),s._v(" 1. 四则运算符号")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("表达式")]),s._v(" "),a("th",[s._v("举例")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("$((  ))")]),s._v(" "),a("td",[s._v("echo $((1+1))")])]),s._v(" "),a("tr",[a("td",[s._v("$[ ]")]),s._v(" "),a("td",[s._v("echo $[10-5]")])]),s._v(" "),a("tr",[a("td",[s._v("expr")]),s._v(" "),a("td",[s._v("expr 10 / 5")])]),s._v(" "),a("tr",[a("td",[s._v("let")]),s._v(" "),a("td",[s._v("n=1;let n+=1  等价于  let n=n+1")])])])]),s._v(" "),a("h2",{attrs:{id:"_2-了解i-和-i"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-了解i-和-i"}},[s._v("#")]),s._v(" 2.了解i++和++i")]),s._v(" "),a("ul",[a("li",[s._v("对变量的值的影响")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# i=1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let i++")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $i")]),s._v("\n2\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# j=1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let ++j")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $j")]),s._v("\n2\n")])])]),a("ul",[a("li",[s._v("对==表达式==的值的影响")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset i j")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# i=1;j=1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let x=i++         先赋值，再运算")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let y=++j         先运算，再赋值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $i")]),s._v("\n2\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $j")]),s._v("\n2\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $x")]),s._v("\n1\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $y")]),s._v("\n2\n")])])]),a("h1",{attrs:{id:"四、扩展补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、扩展补充"}},[s._v("#")]),s._v(" 四、扩展补充")]),s._v(" "),a("h2",{attrs:{id:"_1-数组定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组定义"}},[s._v("#")]),s._v(" 1. 数组定义")]),s._v(" "),a("h3",{attrs:{id:"㈠-数组分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈠-数组分类"}},[s._v("#")]),s._v(" ㈠ 数组分类")]),s._v(" "),a("ul",[a("li",[s._v("普通数组：只能使用整数作为数组索引(元素的下标)")]),s._v(" "),a("li",[s._v("关联数组：可以使用字符串作为数组索引(元素的下标)")])]),s._v(" "),a("h3",{attrs:{id:"㈡-普通数组定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈡-普通数组定义"}},[s._v("#")]),s._v(" ㈡ 普通数组定义")]),s._v(" "),a("ul",[a("li",[s._v("一次赋予一个值")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("数组名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("索引下标"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=值\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=v1\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=v2\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=v3\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=v4\n")])])]),a("ul",[a("li",[s._v("一次赋予多个值")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("数组名="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("值1 值2 值3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\narray="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("var1 var2 var3 var4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\narray1="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("`"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("passwd`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t将文件中每一行赋值给array1数组\narray2="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("`"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("root`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\narray3="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("harry amy jack "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Miss Hou"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\narray4="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("1 2 3 4 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"㈢-数组的读取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈢-数组的读取"}},[s._v("#")]),s._v(" ㈢ 数组的读取")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("数组名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("元素下标"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\t\t获取数组里第一个元素\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\t\t获取数组里的所有元素\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#array[*]}\t\t\t获取数组里所有元素个数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \t获取数组元素的索引下标\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":1:2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    访问指定的元素；1代表从下标为1的元素开始获取；2代表获取后面几个元素\n\n查看普通数组信息：\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -a")]),s._v("\n")])])]),a("h3",{attrs:{id:"㈣-关联数组定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#㈣-关联数组定义"}},[s._v("#")]),s._v(" ㈣ 关联数组定义")]),s._v(" "),a("h4",{attrs:{id:"①首先声明关联数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#①首先声明关联数组"}},[s._v("#")]),s._v(" ①首先声明关联数组")]),s._v(" "),a("p",[s._v("==declare -A asso_array1==")]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("declare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A asso_array1\ndeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A asso_array2\ndeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A asso_array3\n")])])]),a("h4",{attrs:{id:"②-数组赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#②-数组赋值"}},[s._v("#")]),s._v(" ② 数组赋值")]),s._v(" "),a("ul",[a("li",[s._v("一次赋一个值")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("数组名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("索引or下标"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("=变量值\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# asso_array1[linux]=one")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# asso_array1[java]=two")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# asso_array1[php]=three")]),s._v("\n")])])]),a("ul",[a("li",[s._v("一次赋多个值")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# asso_array2=([name1]=harry [name2]=jack [name3]=amy [name4]="Miss Hou")')]),s._v("\n")])])]),a("ul",[a("li",[s._v("查看关联数组")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -A")]),s._v("\ndeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A asso_array1="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'([php]="three" [java]="two" [linux]="one" )\'')]),s._v("\ndeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A asso_array2="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'([name3]="amy" [name2]="jack" [name1]="harry" [name4]="Miss Hou" )\'')]),s._v("\n")])])]),a("ul",[a("li",[s._v("获取关联数组值")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${asso_array1[linux]}")]),s._v("\none\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${asso_array1[php]}")]),s._v("\nthree\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${asso_array1[*]}")]),s._v("\nthree two one\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${!asso_array1[*]}")]),s._v("\nphp java linux\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${#asso_array1[*]}")]),s._v("\n3\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${#asso_array2[*]}")]),s._v("\n4\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${!asso_array2[*]}")]),s._v("\nname3 name2 name1 name4\n")])])]),a("ul",[a("li",[s._v("其他定义方式")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell05]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -A books")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell05]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let books[linux]++")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell05]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -A|grep books")]),s._v("\ndeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A books="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'([linux]=\"1\" )'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell05]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let books[linux]++")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou shell05]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -A|grep books")]),s._v("\ndeclare "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("A books="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'([linux]=\"2\" )'")]),s._v("\n")])])]),a("h2",{attrs:{id:"_2-其他变量定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他变量定义"}},[s._v("#")]),s._v(" 2. 其他变量定义")]),s._v(" "),a("ul",[a("li",[s._v("取出一个目录下的目录和文件："),a("code",[s._v("dirname")]),s._v("和 "),a("code",[s._v("basename")])])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A=/root/Desktop/shell/mem.txt ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $A")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("root"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Desktop"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("shell"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dirname $A   取出目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("root"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Desktop"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("shell\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# basename $A  取出文件")]),s._v("\nmem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt\n")])])]),a("ul",[a("li",[s._v('-==变量"内容"的删除和替换==')])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("一个“"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("”代表从右往左删除\n两个“"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("”代表从右往左去掉最多\n一个“"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#”代表从左往右去掉删除")]),s._v("\n两个“"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##”代表从左往右去掉最多")]),s._v("\n\n举例说明：\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# url=www.taobao.com")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${#url}\t\t     获取变量的长度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${url#*.}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${url##*.}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${url%.*}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${url%%.*}")]),s._v("\n")])])]),a("ul",[a("li",[s._v("以下了解，自己完成")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("替换："),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n 1015  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ao"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("AO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  用AO代替ao（从左往右第一个）\n 1017  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("url/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ao"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("AO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   贪婪替换（替代所有）\n \n替代： "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 和 :"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("和:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n 1019  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("abc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n 1020  abc=hello\n 1021  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("abc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("444"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n 1022  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$abc")]),s._v("\n 1024  abc=\n 1025  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("abc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("222"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 或者 $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名=新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n变量没有被赋值：会使用“新的变量值“ 替代\n变量有被赋值（包括空值）： 不会被替代\n\n 1062  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ABC:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n 1063  ABC=HELLO\n 1064  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ABC:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n 1065  ABC=\n 1066  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ABC:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 或者 $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名:=新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n变量没有被赋值或者赋空值：会使用“新的变量值“ 替代\n变量有被赋值： 不会被替代\n\n 1116  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("abc=123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n 1118  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("abc:=123"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset abc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc:+123}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc:+123}")]),s._v("\n123\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc:+123}")]),s._v("\n\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n变量没有被赋值或者赋空值：不会使用“新的变量值“ 替代\n变量有被赋值： 会被替代\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset abc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc+123}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc+123}")]),s._v("\n123\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc+123}")]),s._v("\n123\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n变量没有被赋值：不会使用“新的变量值“ 替代\n变量有被赋值（包括空值）： 会被替代\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset abc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc?123}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: abc: 123\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc?123}")]),s._v("\nhello\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc?123}")]),s._v("\n\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名?新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n变量没有被赋值:提示错误信息\n变量被赋值（包括空值）：不会使用“新的变量值“ 替代\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset abc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc:?123}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: abc: 123\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc:?123}")]),s._v("\nhello\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abc=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@MissHou ~]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${abc:?123}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: abc: 123\n\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名:?新的变量值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n变量没有被赋值或者赋空值时:提示错误信息\n变量被赋值：不会使用“新的变量值“ 替代\n\n说明：?主要是当变量没有赋值提示错误信息的，没有赋值功能\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);