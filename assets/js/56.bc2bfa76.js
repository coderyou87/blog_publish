(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{441:function(t,a,s){"use strict";s.r(a);var e=s(42),c=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"死锁编码与定位分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁编码与定位分析"}},[t._v("#")]),t._v(" 死锁编码与定位分析")]),t._v(" "),s("p",[t._v("死锁是指两个或两个以上的进程在执行过程中，因争夺资源而造成的一种相互等待的现象，若无外力干涉，它们都将无法推进下去，如果系统资源充足，进程的资源请求都能够得到满足，死锁出现的可能性就很低，否则就会因争夺有限的资源产生死锁。")]),t._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"image-20200802212655602",href:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-08-02/cf9f4c2f484842d78b2273434c87542b.png"}},[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2020-08-02/cf9f4c2f484842d78b2273434c87542b.png",alt:"image-20200802212655602"}})])]),t._v(" "),s("p",[t._v("排查死锁的方法：")]),t._v(" "),s("ol",[s("li",[t._v("jps命令定位进程号：jps -l")]),t._v(" "),s("li",[t._v("jstack找到死锁：jstack pid")])])])}),[],!1,null,null,null);a.default=c.exports}}]);