(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{513:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"spring容器创建过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring容器创建过程"}},[t._v("#")]),t._v(" Spring容器创建过程")]),t._v(" "),e("p",[t._v("Spring容器的创建过程，主要在org.springframework.context.support.AbstractApplicationContext.refresh()方法中完成，其所在模块是sprin-context，主要有以下12个步骤：")]),t._v(" "),e("h2",{attrs:{id:"一、-刷新前的预处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、-刷新前的预处理"}},[t._v("#")]),t._v(" 一、 刷新前的预处理")]),t._v(" "),e("p",[e("code",[t._v("prepareRefresh()")])]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("initPropertySources()")])]),t._v(" "),e("p",[t._v("初始化一些属性设置，子类自定义个性化的属性设置方法")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("getEnvironment().validateRequiredProperties();")]),t._v("：")]),t._v(" "),e("p",[t._v("获取当前环境并校验属性")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("this.earlyApplicationListeners = new LinkedHashSet<>(this.applicationListeners);")])]),t._v(" "),e("p",[t._v("保存容器中一些早期的事件")])])]),t._v(" "),e("h2",{attrs:{id:"二、获取beanfactory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、获取beanfactory"}},[t._v("#")]),t._v(" 二、获取BeanFactory")]),t._v(" "),e("p",[e("code",[t._v("ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();")])]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("refreshBeanFactory();")])]),t._v(" "),e("p",[t._v("刷新(创建)BeanFactory,在AbstractApplicationContext的子类GenericApplicationContext的构造函数中,会创建一个BeanFactory的示例.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanFactory "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultListableBeanFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("getBeanFactory();")]),t._v(" "),e("p",[t._v("返回刚才GenericApplicationContext创建的BeanFactory对象.")])])]),t._v(" "),e("h2",{attrs:{id:"三、beanfactory的预准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、beanfactory的预准备工作"}},[t._v("#")]),t._v(" 三、BeanFactory的预准备工作")]),t._v(" "),e("p",[t._v("​\t"),e("code",[t._v("prepareBeanFactory(beanFactory);")])]),t._v(" "),e("p",[t._v("​\t"),e("code",[t._v("protected void prepareBeanFactory(ConfigurableListableBeanFactory beanFactory)")])]),t._v(" "),e("p",[t._v("BeanFactory的预准备工作, 对BeanFactory进行一些设置.")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("设置BeanFactory的类加载器")]),t._v(" "),e("p",[e("code",[t._v("beanFactory.setBeanClassLoader(getClassLoader());")])])]),t._v(" "),e("li",[e("p",[t._v("添加BeanPostProcessor")]),t._v(" "),e("p",[e("code",[t._v("beanFactory.addBeanPostProcessor(new ApplicationContextAwareProcessor(this));")])])]),t._v(" "),e("li",[e("p",[t._v("设置忽略的自动装配的接口")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnvironmentAware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EmbeddedValueResolverAware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoaderAware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationEventPublisherAware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageSourceAware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextAware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreDependencyInterface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationStartup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("设置可以解析的自动装配, 以便在程序中实现自动装配")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerResolvableDependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerResolvableDependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerResolvableDependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationEventPublisher")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerResolvableDependency")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("添加BeanPostProcessor")]),t._v(" "),e("p",[e("code",[t._v("beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(this));")])])]),t._v(" "),e("li",[e("p",[t._v("添加编译时的AspectJ")])]),t._v(" "),e("li",[e("p",[t._v("注册默认的环境Bean")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsLocalBean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENVIRONMENT_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSingleton")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ENVIRONMENT_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnvironment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsLocalBean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SYSTEM_PROPERTIES_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSingleton")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SYSTEM_PROPERTIES_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnvironment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSystemProperties")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsLocalBean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SYSTEM_ENVIRONMENT_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSingleton")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SYSTEM_ENVIRONMENT_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnvironment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSystemEnvironment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("beanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsLocalBean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPLICATION_STARTUP_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbeanFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSingleton")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPLICATION_STARTUP_BEAN_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getApplicationStartup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"四、beanfactory准备工作完成后进行的后置处理工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、beanfactory准备工作完成后进行的后置处理工作"}},[t._v("#")]),t._v(" 四、BeanFactory准备工作完成后进行的后置处理工作")]),t._v(" "),e("p",[t._v("​\t"),e("code",[t._v("postProcessBeanFactory(beanFactory);")])]),t._v(" "),e("p",[t._v("​\t子类通过重写这个方法, 在"),e("code",[t._v("BeanFactory")]),t._v("创建并预准备完成后, 做进一步的设置")]),t._v(" "),e("h2",{attrs:{id:"五、执行beanfactorypostprocessor的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、执行beanfactorypostprocessor的方法"}},[t._v("#")]),t._v(" 五、执行BeanFactoryPostProcessor的方法")]),t._v(" "),e("p",[e("code",[t._v("invokeBeanFactoryPostProcessors(beanFactory);")])]),t._v(" "),e("p",[e("code",[t._v("BeanFactoryPostProcessor")]),t._v(": "),e("code",[t._v("BeanFactory")]),t._v("的后置处理器. 在"),e("code",[t._v("BeanFactory")]),t._v("标准初始化之后执行.")]),t._v(" "),e("p",[t._v("与"),e("code",[t._v("Bean")]),t._v("的定义与实例化相关的两个后置处理器接口是: BeanFactoryPostProcessor, "),e("code",[t._v("BeanDefinitionRegistryPostProcessor")])]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("invokeBeanFactoryPostProcessor")]),t._v("方法中, 会依次执行"),e("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("与"),e("code",[t._v("BeanFactoryPostProcessor")]),t._v("的方法")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("执行"),e("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("的方法")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("获取所有的"),e("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("；")])]),t._v(" "),e("li",[e("p",[t._v("执行所有实现了"),e("code",[t._v("PriorityOrdered")]),t._v("优先级接口的"),e("code",[t._v("BeanDefinitionRegistryPostProcessor")])])]),t._v(" "),e("li",[e("p",[t._v("执行所有实现了"),e("code",[t._v("Ordered")]),t._v("接口的"),e("code",[t._v("BeanDefinitionRegistryPostProcessor")])])]),t._v(" "),e("li",[e("p",[t._v("执行没有实现任何优先级接口或者顺序接口的"),e("code",[t._v("BeanDefinitionRegistryPostProcessor")])])])])]),t._v(" "),e("li",[e("p",[t._v("执行"),e("code",[t._v("BeanFactoryPostProcessor")]),t._v("的方法")]),t._v(" "),e("ul",[e("li",[t._v("获取所有的"),e("code",[t._v("BeanFactoryProcessor")])]),t._v(" "),e("li",[t._v("执行所有实现了"),e("code",[t._v("PriorityOrdered")]),t._v("接口的"),e("code",[t._v("BeanFactoryPostProcessor")])]),t._v(" "),e("li",[t._v("执行所有实现了"),e("code",[t._v("Ordered")]),t._v("接口的"),e("code",[t._v("BeanFactoryPostProcessor")])]),t._v(" "),e("li",[t._v("执行没有实现任何优先级接口或者顺序接口的"),e("code",[t._v("BeanFactoryPostProcessor")])])])])]),t._v(" "),e("h2",{attrs:{id:"六、注册beanpostprocessor-注册bean的后置处理器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六、注册beanpostprocessor-注册bean的后置处理器"}},[t._v("#")]),t._v(" 六、注册BeanPostProcessor (注册Bean的后置处理器)")]),t._v(" "),e("p",[e("code",[t._v("registerBeanPostProcessors(beanFactory);")])]),t._v(" "),e("p",[t._v("不同接口类型的"),e("code",[t._v("BeanPostProcessor")]),t._v("；在Bean创建前后的执行时机是不一样的")]),t._v(" "),e("p",[t._v("常见的"),e("code",[t._v("BeanPostProcessor")]),t._v("的子类有:")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("DestructionAwareBeanPostProcessor")])]),t._v(" "),e("li",[e("code",[t._v("InstantiationAwareBeanPostProcessor")])]),t._v(" "),e("li",[e("code",[t._v("SmartInstantiationAwareBeanPostProcessor")])]),t._v(" "),e("li",[e("code",[t._v("MergedBeanDefinitionPostProcessor")])])]),t._v(" "),e("p",[t._v("注册"),e("code",[t._v("Bean")]),t._v("后置处理器的步骤:")]),t._v(" "),e("ol",[e("li",[t._v("获取所有的 "),e("code",[t._v("BeanPostProcessor")]),t._v(";后置处理器默认可以通过"),e("code",[t._v("PriorityOrdered")]),t._v("、"),e("code",[t._v("Ordered")]),t._v("接口来执行优先级")]),t._v(" "),e("li",[t._v("注册实现了"),e("code",[t._v("PriorityOrdered")]),t._v("优先级接口的"),e("code",[t._v("BeanPostProcessor")]),t._v(", 把每一个"),e("code",[t._v("BeanPostProcessor")]),t._v("添加到"),e("code",[t._v("BeanFactory")]),t._v("中, 执行"),e("code",[t._v("beanFactory.addBeanPostProcessor(postProcessor);")]),t._v("方法, 注册"),e("code",[t._v("BeanPostProcessor")])]),t._v(" "),e("li",[t._v("注册实现了"),e("code",[t._v("Ordered")]),t._v("接口的"),e("code",[t._v("BeanPostProcessor")])]),t._v(" "),e("li",[t._v("注册没有实现任何优先级或排序接口的"),e("code",[t._v("BeanPostProcessor")])]),t._v(" "),e("li",[t._v("注册"),e("code",[t._v("MergedBeanDefinitionPostProcessor")])]),t._v(" "),e("li",[t._v("注册一个"),e("code",[t._v("ApplicationListenerDetector")])])]),t._v(" "),e("h2",{attrs:{id:"七、初始化messagesource组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七、初始化messagesource组件"}},[t._v("#")]),t._v(" 七、初始化MessageSource组件")]),t._v(" "),e("p",[t._v("主要是完成国际化, 消息绑定, 消息解析等功能")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("获取"),e("code",[t._v("BeanFactory")])])]),t._v(" "),e("li",[e("p",[t._v("查看容器中是否有"),e("code",[t._v("id")]),t._v("为"),e("code",[t._v("messageSource")]),t._v("并且类型是"),e("code",[t._v("MessageSource")]),t._v("的组件")]),t._v(" "),e("ol",[e("li",[t._v("如果有, 则取出组件并赋值给"),e("code",[t._v("messageSource")])]),t._v(" "),e("li",[t._v("如果没有, 则创建一个"),e("code",[t._v("DelegatingMessageSource")])])])]),t._v(" "),e("li",[e("p",[t._v("将创建号的"),e("code",[t._v("MessageSource")]),t._v("注册到容器中, 方便在后面的程序中,可以自动注入MessageSource")]),t._v(" "),e("p",[e("code",[t._v("beanFactory.registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.messageSource);")])])])]),t._v(" "),e("h2",{attrs:{id:"八、初始化事件派发器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#八、初始化事件派发器"}},[t._v("#")]),t._v(" 八、初始化事件派发器")]),t._v(" "),e("ol",[e("li",[t._v("获取BeanFactory")]),t._v(" "),e("li",[t._v("从BeanFactory中获取"),e("code",[t._v("applicationEventMulticaster")])]),t._v(" "),e("li",[t._v("如果没有"),e("code",[t._v("applicationEventMulticaster")]),t._v(", 则创建一个"),e("code",[t._v("SimpleApplicationEventMulticaster")]),t._v(", 并赋值给"),e("code",[t._v("applicationEventMulticaster")])]),t._v(" "),e("li",[t._v("将创建的ApplicationEventMulticaster添加到BeanFactory中，以后其他组件直接自动注入")])]),t._v(" "),e("h2",{attrs:{id:"九、onrefresh-留给子容器（子类）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#九、onrefresh-留给子容器（子类）"}},[t._v("#")]),t._v(" 九、onRefresh();留给子容器（子类）")]),t._v(" "),e("h2",{attrs:{id:"十、将程序中的applicationlistener注册到容器中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十、将程序中的applicationlistener注册到容器中"}},[t._v("#")]),t._v(" 十、将程序中的ApplicationListener注册到容器中")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("从容器中获取所有的ApplicationListener")])]),t._v(" "),e("li",[e("p",[t._v("将每个监听器添加到事件派发器中")]),t._v(" "),e("p",[e("code",[t._v("getApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName);")])])]),t._v(" "),e("li",[e("p",[t._v("派发之前步骤产生的事件")])])]),t._v(" "),e("h2",{attrs:{id:"十一、初始化所有剩下的单实例bean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十一、初始化所有剩下的单实例bean"}},[t._v("#")]),t._v(" 十一、初始化所有剩下的单实例bean")]),t._v(" "),e("p",[t._v("执行"),e("code",[t._v("finishBeanFactoryInitialization(beanFactory);")]),t._v("方法, 初始化所有剩下的单实例Bean")]),t._v(" "),e("p",[t._v("beanFactory.preInstantiateSingletons();初始化后剩下的单实例bean")]),t._v(" "),e("h3",{attrs:{id:"_11-1-获取容器中的所有bean，依次进行初始化和创建对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-获取容器中的所有bean，依次进行初始化和创建对象"}},[t._v("#")]),t._v(" 11.1 获取容器中的所有Bean，依次进行初始化和创建对象")]),t._v(" "),e("h3",{attrs:{id:"_11-2-获取bean的定义信息；rootbeandefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-获取bean的定义信息；rootbeandefinition"}},[t._v("#")]),t._v(" 11.2 获取Bean的定义信息；RootBeanDefinition")]),t._v(" "),e("h3",{attrs:{id:"_11-3-bean不是抽象的，是单实例的，是懒加载；"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-bean不是抽象的，是单实例的，是懒加载；"}},[t._v("#")]),t._v(" 11.3 Bean不是抽象的，是单实例的，是懒加载；")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("判断是否是FactoryBean；是否是实现FactoryBean接口的Bean；")])]),t._v(" "),e("li",[e("p",[t._v("不是工厂Bean。利用getBean(beanName);创建对象")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("getBean(beanName)； ioc.getBean();")])]),t._v(" "),e("li",[e("p",[t._v("doGetBean(name, null, null, false);")])]),t._v(" "),e("li",[e("p",[t._v("先获取缓存中保存的单实例Bean。如果能获取到说明这个Bean之前被创建过（所有创建过的单实例Bean都会被缓存起来, 从private final Map<String, Object> singletonObjects = new ConcurrentHashMap<String, Object>(256);")])]),t._v(" "),e("li",[e("p",[t._v("缓存中获取不到，开始Bean的创建对象流程；")])]),t._v(" "),e("li",[e("p",[t._v("标记当前bean已经被创建")])]),t._v(" "),e("li",[e("p",[t._v("获取Bean的定义信息；")])]),t._v(" "),e("li",[e("p",[t._v("获取当前Bean依赖的其他Bean;如果有按照getBean()把依赖的Bean先创建出来；")])]),t._v(" "),e("li",[e("p",[t._v("启动单实例Bean的创建流程；")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("createBean(beanName, mbd, args);")])]),t._v(" "),e("li",[e("p",[t._v("Object bean = resolveBeforeInstantiation(beanName, mbdToUse);让BeanPostProcessor先拦截返回代理对象；")]),t._v(" "),e("p",[t._v("提前执行: InstantiationAwareBeanPostProcessor()；先触发：postProcessBeforeInstantiation()；如果有返回值：触发postProcessAfterInitialization()；")])]),t._v(" "),e("li",[e("p",[t._v("如果前面的InstantiationAwareBeanPostProcessor没有返回代理对象；调用4")])]),t._v(" "),e("li",[e("p",[t._v("Object beanInstance = doCreateBean(beanName, mbdToUse, args);创建Bean")]),t._v(" "),e("ol",[e("li",[t._v("【创建Bean实例】；createBeanInstance(beanName, mbd, args); 利用工厂方法或者对象的构造器创建出Bean实例；")]),t._v(" "),e("li",[t._v("applyMergedBeanDefinitionPostProcessors(mbd, beanType, beanName); 调用MergedBeanDefinitionPostProcessor的postProcessMergedBeanDefinition(mbd, beanType, beanName);")]),t._v(" "),e("li",[t._v("【Bean属性赋值】populateBean(beanName, mbd, instanceWrapper);\n赋值之前：\n"),e("ol",[e("li",[e("p",[t._v("拿到InstantiationAwareBeanPostProcessor后置处理器；postProcessAfterInstantiation()；")])]),t._v(" "),e("li",[e("p",[t._v("拿到InstantiationAwareBeanPostProcessor后置处理器；postProcessPropertyValues()；")])]),t._v(" "),e("li",[e("p",[t._v("应用Bean属性的值；为属性利用setter方法等进行赋值；applyPropertyValues(beanName, mbd, bw, pvs);")])]),t._v(" "),e("li",[e("p",[t._v("【Bean初始化】initializeBean(beanName, exposedObject, mbd);")]),t._v(" "),e("ol",[e("li",[t._v("【执行Aware接口方法】invokeAwareMethods(beanName, bean);执行xxxAware接口的方法 BeanNameAware\\BeanClassLoaderAware\\BeanFactoryAware")]),t._v(" "),e("li",[t._v("【执行后置处理器初始化之前】applyBeanPostProcessorsBeforeInitialization(wrappedBean, beanName);\nBeanPostProcessor.postProcessBeforeInitialization（）;")]),t._v(" "),e("li",[t._v("【执行初始化方法】invokeInitMethods(beanName, wrappedBean, mbd);\n"),e("ol",[e("li",[t._v("是否是InitializingBean接口的实现；执行接口规定的初始化；")]),t._v(" "),e("li",[t._v("是否自定义初始化方法；")])])]),t._v(" "),e("li",[t._v("执行后置处理器初始化之后】applyBeanPostProcessorsAfterInitialization\nBeanPostProcessor.postProcessAfterInitialization()；")]),t._v(" "),e("li",[t._v("注册Bean的销毁方法；")])])]),t._v(" "),e("li",[e("p",[t._v("将创建的Bean添加到缓存中singletonObjects；")]),t._v(" "),e("p",[t._v("ioc容器就是这些Map；很多的Map里面保存了单实例Bean，环境信息。。。。；所有Bean都利用getBean创建完成以后；检查所有的Bean是否是SmartInitializingSingleton接口的；如果是；就执行afterSingletonsInstantiated()；")])])])])])])])])])])]),t._v(" "),e("h2",{attrs:{id:"十二、完成beanfactory的初始化创建工作-ioc容器创建完成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十二、完成beanfactory的初始化创建工作-ioc容器创建完成"}},[t._v("#")]),t._v(" 十二、完成BeanFactory的初始化创建工作 (IOC容器创建完成)")]),t._v(" "),e("ol",[e("li",[t._v("initLifecycleProcessor();初始化和生命周期有关的后置处理器；LifecycleProcessor默认从容器中找是否有lifecycleProcessor的组件【LifecycleProcessor】；如果没有new DefaultLifecycleProcessor();加入到容器；")]),t._v(" "),e("li",[t._v("getLifecycleProcessor().onRefresh(); 拿到前面定义的生命周期处理器（BeanFactory）；回调onRefresh()；")]),t._v(" "),e("li",[t._v("publishEvent(new ContextRefreshedEvent(this));发布容器刷新完成事件；")]),t._v(" "),e("li",[t._v("liveBeansView.registerApplicationContext(this);")])]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结:")]),t._v(" "),e("ol",[e("li",[t._v("Spring在容器启动的时候, 会保存所有注册的Bean的定义信息\n"),e("ol",[e("li",[t._v("xml注册的Bean")]),t._v(" "),e("li",[t._v("注解注册的Bean")])])]),t._v(" "),e("li",[t._v("Spring容器会在合适的时机创建相关的Bean\n"),e("ol",[e("li",[t._v("在需要使用该Bean时,利用getBean创建Bean,创建完成后,将Bean保存在容器中")]),t._v(" "),e("li",[t._v("统一创建所有剩下的单实例Bean,")])])]),t._v(" "),e("li",[t._v("后置处理器 BeanPostProcessor\n"),e("ol",[e("li",[t._v("每一个Bean创建完成,都会使用各种后置处理器进行处理, 来增强bean的功能")])])]),t._v(" "),e("li",[t._v("事件驱动模型\n"),e("ol",[e("li",[t._v("ApplicationListener: 事件监听")]),t._v(" "),e("li",[t._v("ApplicationEventMulticaster: 事件派发")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);