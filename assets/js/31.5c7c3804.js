(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{410:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"程序计数器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[t._v("#")]),t._v(" 程序计数器")]),t._v(" "),s("h2",{attrs:{id:"一、pc寄存器介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、pc寄存器介绍"}},[t._v("#")]),t._v(" 一、PC寄存器介绍")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-01/d572adb8da564c608b98566481bfa676.png",alt:"10d8620a08bcd128b95f7cdc7a56694f"}})]),t._v(" "),s("ul",[s("li",[t._v("JVM中的程序计数寄存器（Program Counter Register），Register的命名源于CPU的寄存器，寄存器存储指令相关的现场信息。CPU只有把数据装载到寄存器才能够运行。")]),t._v(" "),s("li",[t._v("这里，并非是广义上所指的物理寄存器，或许将其翻译为PC计数器（或指令计数器）会更加贴切（也称为程序钩子），并且也不容易引起一些不必要的误会。JVM中的PC寄存器是对物理PC寄存器的一种抽象模拟。")]),t._v(" "),s("li",[t._v("它是一块很小的内存空间，几乎可以忽略不记。也是运行速度最快的存储区域。")]),t._v(" "),s("li",[s("strong",[t._v("在JVM规范中，每个线程都有它自己的程序计数器，是线程私有的")]),t._v("，"),s("strong",[t._v("生命周期与线程的生命周期保持一致。")])]),t._v(" "),s("li",[t._v("任何时间一个线程都只有一个方法在执行，也就是所谓的当前方法。程序计数器会存储当前线程正在执行的Java方法的JVM指令地址；或者，"),s("strong",[t._v("如果是在执行native方法，则是未指定值（undefined）")]),t._v("。")]),t._v(" "),s("li",[t._v("它是程序控制流的指示器，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成")]),t._v(" "),s("li",[t._v("字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令。")]),t._v(" "),s("li",[s("strong",[t._v("它是唯一一个在Java虚拟机规范中没有规定任何OutofMemoryError情况的区域。")])])]),t._v(" "),s("h2",{attrs:{id:"二、pc寄存器的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、pc寄存器的作用"}},[t._v("#")]),t._v(" 二、PC寄存器的作用")]),t._v(" "),s("p",[s("strong",[t._v("PC寄存器用来存储指向下一条指令的地址，也就是即将要执行的指令代码。由执行引擎读取下一条指令，并执行该指令。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-01/a6381b3fda54495f8ed66a26401e1e86.png",alt:"539e339e3e2800f0f2de9293fe426390"}})]),t._v(" "),s("h2",{attrs:{id:"三、代码示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、代码示例"}},[t._v("#")]),t._v(" 三、代码示例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PCRegisterTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用反编译：javap -v PCRegisterTest.class")]),t._v(" "),s("p",[t._v("左边的数字代表指令地址 (偏移地址)，即 PC 寄存器中可能存储的值，然后执行引擎读取 PC 寄存器中的值，并执行该指令")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-01/a46c007455bf48998bb3013864bb7690.png",alt:"9a908396af919b71efa699db077fa35e"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-01/69a21a7cf9cb46fc8fc8eb397acf643a.png",alt:"20201120202417"}})]),t._v(" "),s("h2",{attrs:{id:"四、两个常见面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、两个常见面试题"}},[t._v("#")]),t._v(" 四、两个常见面试题")]),t._v(" "),s("blockquote",[s("p",[t._v("使用 PC寄存器 存储字节码指令地址有什么用呢？")]),t._v(" "),s("p",[t._v("或者问")]),t._v(" "),s("p",[t._v("为什么使用 PC寄存器 来记录当前线程的执行地址呢？")])]),t._v(" "),s("ul",[s("li",[t._v("因为线程是一个个的顺序执行流，CPU需要不停的切换各个线程，这时候切换回来以后，就得知道接着从哪开始继续执行")]),t._v(" "),s("li",[t._v("JVM的字节码解释器就需要通过改变PC寄存器的值来明确下一条应该执行什么样的字节码指令")]),t._v(" "),s("li",[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-01/0324b8f7c85c47878f9066c3403856e4.jpg",alt:"20201120202625"}})])]),t._v(" "),s("blockquote",[s("p",[t._v("PC寄存器为什么被设定为私有的？")])]),t._v(" "),s("ul",[s("li",[t._v("我们都知道所谓的多线程在一个特定的时间段内只会执行其中某一个线程的方法，CPU会不停地做任务切换，这样必然导致经常中断或恢复，如何保证分毫无差呢？")]),t._v(" "),s("li",[s("strong",[t._v("为了能够准确地记录各个线程正在执行的当前字节码指令地址，最好的办法自然是为每一个线程都分配一个PC寄存器，这样一来各个线程之间便可以进行独立计算，从而不会出现相互干扰的情况。")])]),t._v(" "),s("li",[t._v("由于CPU时间片轮限制，众多线程在并发执行过程中，任何一个确定的时刻，一个处理器或者多核处理器中的一个内核，只会执行某个线程中的一条指令。")]),t._v(" "),s("li",[t._v("这样必然导致经常中断或恢复，如何保证分毫无差呢？每个线程在创建后，都会产生自己的程序计数器和栈帧，程序计数器在各个线程之间互不影响。")])]),t._v(" "),s("h2",{attrs:{id:"五、cpu时间片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、cpu时间片"}},[t._v("#")]),t._v(" 五、CPU时间片")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://you-blog.oss-accelerate.aliyuncs.com/typora/2021-03-01/41b46cd4bf91486188b22cd87083cf25.png",alt:"9b8a2691dee33d9e2a02c3c80d26c6d0"}})]),t._v(" "),s("ul",[s("li",[t._v("CPU时间片即CPU分配给各个程序的时间，每个线程被分配一个时间段，称作它的时间片。")]),t._v(" "),s("li",[t._v("在宏观上：我们可以同时打开多个应用程序，每个程序并行不悖，同时运行。")]),t._v(" "),s("li",[t._v("但在微观上：由于只有一个CPU，一次只能处理程序要求的一部分，如何处理公平，一种方法就是引入时间片，每个程序轮流执行。")]),t._v(" "),s("li",[s("strong",[t._v("总结：宏观并行，微观并发")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);